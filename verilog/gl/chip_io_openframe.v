/* Generated by Yosys 0.30+48 (git sha1 14d50a176d5, gcc 8.3.1 -fPIC -Os) */

module chip_io_openframe(vddio_pad, vddio_pad2, vssio_pad, vssio_pad2, vccd_pad, vssd_pad, vdda_pad, vssa_pad, vdda1_pad, vdda1_pad2, vdda2_pad, vssa1_pad, vssa1_pad2, vssa2_pad, vccd1_pad, vccd2_pad, vssd1_pad, vssd2_pad, vddio, vssio, vccd
, vssd, vdda, vssa, vdda1, vdda2, vssa1, vssa2, vccd1, vccd2, vssd1, vssd2, resetb_pad, porb_h, porb_l, por_l, resetb_h, resetb_l, mask_rev, gpio, gpio_out, gpio_oeb
, gpio_inp_dis, gpio_ib_mode_sel, gpio_vtrip_sel, gpio_slow_sel, gpio_holdover, gpio_analog_en, gpio_analog_sel, gpio_analog_pol, gpio_dm0, gpio_dm1, gpio_dm2, gpio_in, gpio_in_h, gpio_loopback_zero, gpio_loopback_one, analog_io, analog_noesd_io);
  wire analog_a;
  wire analog_b;
  inout [43:0] analog_io;
  wire [43:0] analog_io;
  inout [43:0] analog_noesd_io;
  wire [43:0] analog_noesd_io;
  inout [43:0] gpio;
  wire [43:0] gpio;
  input [43:0] gpio_analog_en;
  wire [43:0] gpio_analog_en;
  input [43:0] gpio_analog_pol;
  wire [43:0] gpio_analog_pol;
  input [43:0] gpio_analog_sel;
  wire [43:0] gpio_analog_sel;
  input [43:0] gpio_dm0;
  wire [43:0] gpio_dm0;
  input [43:0] gpio_dm1;
  wire [43:0] gpio_dm1;
  input [43:0] gpio_dm2;
  wire [43:0] gpio_dm2;
  wire \gpio_dm_all[0] ;
  wire \gpio_dm_all[100] ;
  wire \gpio_dm_all[101] ;
  wire \gpio_dm_all[102] ;
  wire \gpio_dm_all[103] ;
  wire \gpio_dm_all[104] ;
  wire \gpio_dm_all[105] ;
  wire \gpio_dm_all[106] ;
  wire \gpio_dm_all[107] ;
  wire \gpio_dm_all[108] ;
  wire \gpio_dm_all[109] ;
  wire \gpio_dm_all[10] ;
  wire \gpio_dm_all[110] ;
  wire \gpio_dm_all[111] ;
  wire \gpio_dm_all[112] ;
  wire \gpio_dm_all[113] ;
  wire \gpio_dm_all[114] ;
  wire \gpio_dm_all[115] ;
  wire \gpio_dm_all[116] ;
  wire \gpio_dm_all[117] ;
  wire \gpio_dm_all[118] ;
  wire \gpio_dm_all[119] ;
  wire \gpio_dm_all[11] ;
  wire \gpio_dm_all[120] ;
  wire \gpio_dm_all[121] ;
  wire \gpio_dm_all[122] ;
  wire \gpio_dm_all[123] ;
  wire \gpio_dm_all[124] ;
  wire \gpio_dm_all[125] ;
  wire \gpio_dm_all[126] ;
  wire \gpio_dm_all[127] ;
  wire \gpio_dm_all[128] ;
  wire \gpio_dm_all[129] ;
  wire \gpio_dm_all[12] ;
  wire \gpio_dm_all[130] ;
  wire \gpio_dm_all[131] ;
  wire \gpio_dm_all[13] ;
  wire \gpio_dm_all[14] ;
  wire \gpio_dm_all[15] ;
  wire \gpio_dm_all[16] ;
  wire \gpio_dm_all[17] ;
  wire \gpio_dm_all[18] ;
  wire \gpio_dm_all[19] ;
  wire \gpio_dm_all[1] ;
  wire \gpio_dm_all[20] ;
  wire \gpio_dm_all[21] ;
  wire \gpio_dm_all[22] ;
  wire \gpio_dm_all[23] ;
  wire \gpio_dm_all[24] ;
  wire \gpio_dm_all[25] ;
  wire \gpio_dm_all[26] ;
  wire \gpio_dm_all[27] ;
  wire \gpio_dm_all[28] ;
  wire \gpio_dm_all[29] ;
  wire \gpio_dm_all[2] ;
  wire \gpio_dm_all[30] ;
  wire \gpio_dm_all[31] ;
  wire \gpio_dm_all[32] ;
  wire \gpio_dm_all[33] ;
  wire \gpio_dm_all[34] ;
  wire \gpio_dm_all[35] ;
  wire \gpio_dm_all[36] ;
  wire \gpio_dm_all[37] ;
  wire \gpio_dm_all[38] ;
  wire \gpio_dm_all[39] ;
  wire \gpio_dm_all[3] ;
  wire \gpio_dm_all[40] ;
  wire \gpio_dm_all[41] ;
  wire \gpio_dm_all[42] ;
  wire \gpio_dm_all[43] ;
  wire \gpio_dm_all[44] ;
  wire \gpio_dm_all[45] ;
  wire \gpio_dm_all[46] ;
  wire \gpio_dm_all[47] ;
  wire \gpio_dm_all[48] ;
  wire \gpio_dm_all[49] ;
  wire \gpio_dm_all[4] ;
  wire \gpio_dm_all[50] ;
  wire \gpio_dm_all[51] ;
  wire \gpio_dm_all[52] ;
  wire \gpio_dm_all[53] ;
  wire \gpio_dm_all[54] ;
  wire \gpio_dm_all[55] ;
  wire \gpio_dm_all[56] ;
  wire \gpio_dm_all[57] ;
  wire \gpio_dm_all[58] ;
  wire \gpio_dm_all[59] ;
  wire \gpio_dm_all[5] ;
  wire \gpio_dm_all[60] ;
  wire \gpio_dm_all[61] ;
  wire \gpio_dm_all[62] ;
  wire \gpio_dm_all[63] ;
  wire \gpio_dm_all[64] ;
  wire \gpio_dm_all[65] ;
  wire \gpio_dm_all[66] ;
  wire \gpio_dm_all[67] ;
  wire \gpio_dm_all[68] ;
  wire \gpio_dm_all[69] ;
  wire \gpio_dm_all[6] ;
  wire \gpio_dm_all[70] ;
  wire \gpio_dm_all[71] ;
  wire \gpio_dm_all[72] ;
  wire \gpio_dm_all[73] ;
  wire \gpio_dm_all[74] ;
  wire \gpio_dm_all[75] ;
  wire \gpio_dm_all[76] ;
  wire \gpio_dm_all[77] ;
  wire \gpio_dm_all[78] ;
  wire \gpio_dm_all[79] ;
  wire \gpio_dm_all[7] ;
  wire \gpio_dm_all[80] ;
  wire \gpio_dm_all[81] ;
  wire \gpio_dm_all[82] ;
  wire \gpio_dm_all[83] ;
  wire \gpio_dm_all[84] ;
  wire \gpio_dm_all[85] ;
  wire \gpio_dm_all[86] ;
  wire \gpio_dm_all[87] ;
  wire \gpio_dm_all[88] ;
  wire \gpio_dm_all[89] ;
  wire \gpio_dm_all[8] ;
  wire \gpio_dm_all[90] ;
  wire \gpio_dm_all[91] ;
  wire \gpio_dm_all[92] ;
  wire \gpio_dm_all[93] ;
  wire \gpio_dm_all[94] ;
  wire \gpio_dm_all[95] ;
  wire \gpio_dm_all[96] ;
  wire \gpio_dm_all[97] ;
  wire \gpio_dm_all[98] ;
  wire \gpio_dm_all[99] ;
  wire \gpio_dm_all[9] ;
  wire \gpio_enh[0] ;
  wire \gpio_enh[10] ;
  wire \gpio_enh[11] ;
  wire \gpio_enh[12] ;
  wire \gpio_enh[13] ;
  wire \gpio_enh[14] ;
  wire \gpio_enh[15] ;
  wire \gpio_enh[16] ;
  wire \gpio_enh[17] ;
  wire \gpio_enh[18] ;
  wire \gpio_enh[19] ;
  wire \gpio_enh[1] ;
  wire \gpio_enh[20] ;
  wire \gpio_enh[21] ;
  wire \gpio_enh[22] ;
  wire \gpio_enh[23] ;
  wire \gpio_enh[24] ;
  wire \gpio_enh[25] ;
  wire \gpio_enh[26] ;
  wire \gpio_enh[27] ;
  wire \gpio_enh[28] ;
  wire \gpio_enh[29] ;
  wire \gpio_enh[2] ;
  wire \gpio_enh[30] ;
  wire \gpio_enh[31] ;
  wire \gpio_enh[32] ;
  wire \gpio_enh[33] ;
  wire \gpio_enh[34] ;
  wire \gpio_enh[35] ;
  wire \gpio_enh[36] ;
  wire \gpio_enh[37] ;
  wire \gpio_enh[38] ;
  wire \gpio_enh[39] ;
  wire \gpio_enh[3] ;
  wire \gpio_enh[40] ;
  wire \gpio_enh[41] ;
  wire \gpio_enh[42] ;
  wire \gpio_enh[43] ;
  wire \gpio_enh[4] ;
  wire \gpio_enh[5] ;
  wire \gpio_enh[6] ;
  wire \gpio_enh[7] ;
  wire \gpio_enh[8] ;
  wire \gpio_enh[9] ;
  input [43:0] gpio_holdover;
  wire [43:0] gpio_holdover;
  input [43:0] gpio_ib_mode_sel;
  wire [43:0] gpio_ib_mode_sel;
  output [43:0] gpio_in;
  wire [43:0] gpio_in;
  output [43:0] gpio_in_h;
  wire [43:0] gpio_in_h;
  input [43:0] gpio_inp_dis;
  wire [43:0] gpio_inp_dis;
  output [43:0] gpio_loopback_one;
  wire [43:0] gpio_loopback_one;
  output [43:0] gpio_loopback_zero;
  wire [43:0] gpio_loopback_zero;
  input [43:0] gpio_oeb;
  wire [43:0] gpio_oeb;
  input [43:0] gpio_out;
  wire [43:0] gpio_out;
  input [43:0] gpio_slow_sel;
  wire [43:0] gpio_slow_sel;
  input [43:0] gpio_vtrip_sel;
  wire [43:0] gpio_vtrip_sel;
  wire \loop0_gpio[0] ;
  wire \loop0_gpio[10] ;
  wire \loop0_gpio[11] ;
  wire \loop0_gpio[12] ;
  wire \loop0_gpio[13] ;
  wire \loop0_gpio[14] ;
  wire \loop0_gpio[15] ;
  wire \loop0_gpio[16] ;
  wire \loop0_gpio[17] ;
  wire \loop0_gpio[18] ;
  wire \loop0_gpio[19] ;
  wire \loop0_gpio[1] ;
  wire \loop0_gpio[20] ;
  wire \loop0_gpio[21] ;
  wire \loop0_gpio[22] ;
  wire \loop0_gpio[23] ;
  wire \loop0_gpio[24] ;
  wire \loop0_gpio[25] ;
  wire \loop0_gpio[26] ;
  wire \loop0_gpio[27] ;
  wire \loop0_gpio[28] ;
  wire \loop0_gpio[29] ;
  wire \loop0_gpio[2] ;
  wire \loop0_gpio[30] ;
  wire \loop0_gpio[31] ;
  wire \loop0_gpio[32] ;
  wire \loop0_gpio[33] ;
  wire \loop0_gpio[34] ;
  wire \loop0_gpio[35] ;
  wire \loop0_gpio[36] ;
  wire \loop0_gpio[37] ;
  wire \loop0_gpio[38] ;
  wire \loop0_gpio[39] ;
  wire \loop0_gpio[3] ;
  wire \loop0_gpio[40] ;
  wire \loop0_gpio[41] ;
  wire \loop0_gpio[42] ;
  wire \loop0_gpio[43] ;
  wire \loop0_gpio[4] ;
  wire \loop0_gpio[5] ;
  wire \loop0_gpio[6] ;
  wire \loop0_gpio[7] ;
  wire \loop0_gpio[8] ;
  wire \loop0_gpio[9] ;
  wire \loop1_gpio[0] ;
  wire \loop1_gpio[10] ;
  wire \loop1_gpio[11] ;
  wire \loop1_gpio[12] ;
  wire \loop1_gpio[13] ;
  wire \loop1_gpio[14] ;
  wire \loop1_gpio[15] ;
  wire \loop1_gpio[16] ;
  wire \loop1_gpio[17] ;
  wire \loop1_gpio[18] ;
  wire \loop1_gpio[19] ;
  wire \loop1_gpio[1] ;
  wire \loop1_gpio[20] ;
  wire \loop1_gpio[21] ;
  wire \loop1_gpio[22] ;
  wire \loop1_gpio[23] ;
  wire \loop1_gpio[24] ;
  wire \loop1_gpio[25] ;
  wire \loop1_gpio[26] ;
  wire \loop1_gpio[27] ;
  wire \loop1_gpio[28] ;
  wire \loop1_gpio[29] ;
  wire \loop1_gpio[2] ;
  wire \loop1_gpio[30] ;
  wire \loop1_gpio[31] ;
  wire \loop1_gpio[32] ;
  wire \loop1_gpio[33] ;
  wire \loop1_gpio[34] ;
  wire \loop1_gpio[35] ;
  wire \loop1_gpio[36] ;
  wire \loop1_gpio[37] ;
  wire \loop1_gpio[38] ;
  wire \loop1_gpio[39] ;
  wire \loop1_gpio[3] ;
  wire \loop1_gpio[40] ;
  wire \loop1_gpio[41] ;
  wire \loop1_gpio[42] ;
  wire \loop1_gpio[43] ;
  wire \loop1_gpio[4] ;
  wire \loop1_gpio[5] ;
  wire \loop1_gpio[6] ;
  wire \loop1_gpio[7] ;
  wire \loop1_gpio[8] ;
  wire \loop1_gpio[9] ;
  output [31:0] mask_rev;
  wire [31:0] mask_rev;
  output por_l;
  wire por_l;
  output porb_h;
  wire porb_h;
  output porb_l;
  wire porb_l;
  output resetb_h;
  wire resetb_h;
  output resetb_l;
  wire resetb_l;
  input resetb_pad;
  wire resetb_pad;
  inout vccd;
  wire vccd;
  inout vccd1;
  wire vccd1;
  inout vccd1_pad;
  wire vccd1_pad;
  inout vccd2;
  wire vccd2;
  inout vccd2_pad;
  wire vccd2_pad;
  inout vccd_pad;
  wire vccd_pad;
  inout vdda;
  wire vdda;
  inout vdda1;
  wire vdda1;
  inout vdda1_pad;
  wire vdda1_pad;
  inout vdda1_pad2;
  wire vdda1_pad2;
  inout vdda2;
  wire vdda2;
  inout vdda2_pad;
  wire vdda2_pad;
  inout vdda_pad;
  wire vdda_pad;
  inout vddio;
  wire vddio;
  inout vddio_pad;
  wire vddio_pad;
  inout vddio_pad2;
  wire vddio_pad2;
  wire vddio_q;
  inout vssa;
  wire vssa;
  inout vssa1;
  wire vssa1;
  inout vssa1_pad;
  wire vssa1_pad;
  inout vssa1_pad2;
  wire vssa1_pad2;
  inout vssa2;
  wire vssa2;
  inout vssa2_pad;
  wire vssa2_pad;
  inout vssa_pad;
  wire vssa_pad;
  inout vssd;
  wire vssd;
  inout vssd1;
  wire vssd1;
  inout vssd1_pad;
  wire vssd1_pad;
  inout vssd2;
  wire vssd2;
  inout vssd2_pad;
  wire vssd2_pad;
  inout vssd_pad;
  wire vssd_pad;
  inout vssio;
  wire vssio;
  inout vssio_pad;
  wire vssio_pad;
  inout vssio_pad2;
  wire vssio_pad2;
  wire vssio_q;
  wire xres_loopback_one;
  wire xres_loopback_zero;
  wire xres_vss_loop;
  wire xresloop;
  sky130_ef_io__gpiov2_pad \area0_gpio_pad[0]  (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .ANALOG_EN(gpio_analog_en[38]),
    .ANALOG_POL(gpio_analog_pol[38]),
    .ANALOG_SEL(gpio_analog_sel[38]),
    .DM({ gpio_dm2[38], gpio_dm1[38], gpio_dm0[38] }),
    .ENABLE_H(porb_h),
    .ENABLE_INP_H(\loop0_gpio[38] ),
    .ENABLE_VDDA_H(porb_h),
    .ENABLE_VDDIO(gpio_loopback_one[38]),
    .ENABLE_VSWITCH_H(\loop0_gpio[38] ),
    .HLD_H_N(\loop1_gpio[38] ),
    .HLD_OVR(gpio_holdover[38]),
    .IB_MODE_SEL(gpio_ib_mode_sel[38]),
    .IN(gpio_in[38]),
    .INP_DIS(gpio_inp_dis[38]),
    .IN_H(gpio_in_h[38]),
    .OE_N(gpio_oeb[38]),
    .OUT(gpio_out[38]),
    .PAD(gpio[38]),
    .PAD_A_ESD_0_H(analog_io[38]),
    .PAD_A_NOESD_H(analog_noesd_io[38]),
    .SLOW(gpio_slow_sel[38]),
    .TIE_HI_ESD(\loop1_gpio[38] ),
    .TIE_LO_ESD(\loop0_gpio[38] ),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio),
    .VTRIP_SEL(gpio_vtrip_sel[38])
  );
  sky130_ef_io__gpiov2_pad \area0_gpio_pad[1]  (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .ANALOG_EN(gpio_analog_en[39]),
    .ANALOG_POL(gpio_analog_pol[39]),
    .ANALOG_SEL(gpio_analog_sel[39]),
    .DM({ gpio_dm2[39], gpio_dm1[39], gpio_dm0[39] }),
    .ENABLE_H(porb_h),
    .ENABLE_INP_H(\loop0_gpio[39] ),
    .ENABLE_VDDA_H(porb_h),
    .ENABLE_VDDIO(gpio_loopback_one[39]),
    .ENABLE_VSWITCH_H(\loop0_gpio[39] ),
    .HLD_H_N(\loop1_gpio[39] ),
    .HLD_OVR(gpio_holdover[39]),
    .IB_MODE_SEL(gpio_ib_mode_sel[39]),
    .IN(gpio_in[39]),
    .INP_DIS(gpio_inp_dis[39]),
    .IN_H(gpio_in_h[39]),
    .OE_N(gpio_oeb[39]),
    .OUT(gpio_out[39]),
    .PAD(gpio[39]),
    .PAD_A_ESD_0_H(analog_io[39]),
    .PAD_A_NOESD_H(analog_noesd_io[39]),
    .SLOW(gpio_slow_sel[39]),
    .TIE_HI_ESD(\loop1_gpio[39] ),
    .TIE_LO_ESD(\loop0_gpio[39] ),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio),
    .VTRIP_SEL(gpio_vtrip_sel[39])
  );
  sky130_ef_io__gpiov2_pad \area0_gpio_pad[2]  (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .ANALOG_EN(gpio_analog_en[40]),
    .ANALOG_POL(gpio_analog_pol[40]),
    .ANALOG_SEL(gpio_analog_sel[40]),
    .DM({ gpio_dm2[40], gpio_dm1[40], gpio_dm0[40] }),
    .ENABLE_H(porb_h),
    .ENABLE_INP_H(\loop0_gpio[40] ),
    .ENABLE_VDDA_H(porb_h),
    .ENABLE_VDDIO(gpio_loopback_one[40]),
    .ENABLE_VSWITCH_H(\loop0_gpio[40] ),
    .HLD_H_N(\loop1_gpio[40] ),
    .HLD_OVR(gpio_holdover[40]),
    .IB_MODE_SEL(gpio_ib_mode_sel[40]),
    .IN(gpio_in[40]),
    .INP_DIS(gpio_inp_dis[40]),
    .IN_H(gpio_in_h[40]),
    .OE_N(gpio_oeb[40]),
    .OUT(gpio_out[40]),
    .PAD(gpio[40]),
    .PAD_A_ESD_0_H(analog_io[40]),
    .PAD_A_NOESD_H(analog_noesd_io[40]),
    .SLOW(gpio_slow_sel[40]),
    .TIE_HI_ESD(\loop1_gpio[40] ),
    .TIE_LO_ESD(\loop0_gpio[40] ),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio),
    .VTRIP_SEL(gpio_vtrip_sel[40])
  );
  sky130_ef_io__gpiov2_pad \area0_gpio_pad[3]  (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .ANALOG_EN(gpio_analog_en[41]),
    .ANALOG_POL(gpio_analog_pol[41]),
    .ANALOG_SEL(gpio_analog_sel[41]),
    .DM({ gpio_dm2[41], gpio_dm1[41], gpio_dm0[41] }),
    .ENABLE_H(porb_h),
    .ENABLE_INP_H(\loop0_gpio[41] ),
    .ENABLE_VDDA_H(porb_h),
    .ENABLE_VDDIO(gpio_loopback_one[41]),
    .ENABLE_VSWITCH_H(\loop0_gpio[41] ),
    .HLD_H_N(\loop1_gpio[41] ),
    .HLD_OVR(gpio_holdover[41]),
    .IB_MODE_SEL(gpio_ib_mode_sel[41]),
    .IN(gpio_in[41]),
    .INP_DIS(gpio_inp_dis[41]),
    .IN_H(gpio_in_h[41]),
    .OE_N(gpio_oeb[41]),
    .OUT(gpio_out[41]),
    .PAD(gpio[41]),
    .PAD_A_ESD_0_H(analog_io[41]),
    .PAD_A_NOESD_H(analog_noesd_io[41]),
    .SLOW(gpio_slow_sel[41]),
    .TIE_HI_ESD(\loop1_gpio[41] ),
    .TIE_LO_ESD(\loop0_gpio[41] ),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio),
    .VTRIP_SEL(gpio_vtrip_sel[41])
  );
  sky130_ef_io__gpiov2_pad \area0_gpio_pad[4]  (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .ANALOG_EN(gpio_analog_en[42]),
    .ANALOG_POL(gpio_analog_pol[42]),
    .ANALOG_SEL(gpio_analog_sel[42]),
    .DM({ gpio_dm2[42], gpio_dm1[42], gpio_dm0[42] }),
    .ENABLE_H(porb_h),
    .ENABLE_INP_H(\loop0_gpio[42] ),
    .ENABLE_VDDA_H(porb_h),
    .ENABLE_VDDIO(gpio_loopback_one[42]),
    .ENABLE_VSWITCH_H(\loop0_gpio[42] ),
    .HLD_H_N(\loop1_gpio[42] ),
    .HLD_OVR(gpio_holdover[42]),
    .IB_MODE_SEL(gpio_ib_mode_sel[42]),
    .IN(gpio_in[42]),
    .INP_DIS(gpio_inp_dis[42]),
    .IN_H(gpio_in_h[42]),
    .OE_N(gpio_oeb[42]),
    .OUT(gpio_out[42]),
    .PAD(gpio[42]),
    .PAD_A_ESD_0_H(analog_io[42]),
    .PAD_A_NOESD_H(analog_noesd_io[42]),
    .SLOW(gpio_slow_sel[42]),
    .TIE_HI_ESD(\loop1_gpio[42] ),
    .TIE_LO_ESD(\loop0_gpio[42] ),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio),
    .VTRIP_SEL(gpio_vtrip_sel[42])
  );
  sky130_ef_io__gpiov2_pad \area0_gpio_pad[5]  (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .ANALOG_EN(gpio_analog_en[43]),
    .ANALOG_POL(gpio_analog_pol[43]),
    .ANALOG_SEL(gpio_analog_sel[43]),
    .DM({ gpio_dm2[43], gpio_dm1[43], gpio_dm0[43] }),
    .ENABLE_H(porb_h),
    .ENABLE_INP_H(\loop0_gpio[43] ),
    .ENABLE_VDDA_H(porb_h),
    .ENABLE_VDDIO(gpio_loopback_one[43]),
    .ENABLE_VSWITCH_H(\loop0_gpio[43] ),
    .HLD_H_N(\loop1_gpio[43] ),
    .HLD_OVR(gpio_holdover[43]),
    .IB_MODE_SEL(gpio_ib_mode_sel[43]),
    .IN(gpio_in[43]),
    .INP_DIS(gpio_inp_dis[43]),
    .IN_H(gpio_in_h[43]),
    .OE_N(gpio_oeb[43]),
    .OUT(gpio_out[43]),
    .PAD(gpio[43]),
    .PAD_A_ESD_0_H(analog_io[43]),
    .PAD_A_NOESD_H(analog_noesd_io[43]),
    .SLOW(gpio_slow_sel[43]),
    .TIE_HI_ESD(\loop1_gpio[43] ),
    .TIE_LO_ESD(\loop0_gpio[43] ),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio),
    .VTRIP_SEL(gpio_vtrip_sel[43])
  );
  sky130_ef_io__gpiov2_pad \area1_gpio_pad[0]  (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .ANALOG_EN(gpio_analog_en[0]),
    .ANALOG_POL(gpio_analog_pol[0]),
    .ANALOG_SEL(gpio_analog_sel[0]),
    .DM({ gpio_dm2[0], gpio_dm1[0], gpio_dm0[0] }),
    .ENABLE_H(porb_h),
    .ENABLE_INP_H(\loop0_gpio[0] ),
    .ENABLE_VDDA_H(porb_h),
    .ENABLE_VDDIO(gpio_loopback_one[0]),
    .ENABLE_VSWITCH_H(\loop0_gpio[0] ),
    .HLD_H_N(\loop1_gpio[0] ),
    .HLD_OVR(gpio_holdover[0]),
    .IB_MODE_SEL(gpio_ib_mode_sel[0]),
    .IN(gpio_in[0]),
    .INP_DIS(gpio_inp_dis[0]),
    .IN_H(gpio_in_h[0]),
    .OE_N(gpio_oeb[0]),
    .OUT(gpio_out[0]),
    .PAD(gpio[0]),
    .PAD_A_ESD_0_H(analog_io[0]),
    .PAD_A_NOESD_H(analog_noesd_io[0]),
    .SLOW(gpio_slow_sel[0]),
    .TIE_HI_ESD(\loop1_gpio[0] ),
    .TIE_LO_ESD(\loop0_gpio[0] ),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda1),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa1),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio),
    .VTRIP_SEL(gpio_vtrip_sel[0])
  );
  sky130_ef_io__gpiov2_pad \area1_gpio_pad[10]  (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .ANALOG_EN(gpio_analog_en[10]),
    .ANALOG_POL(gpio_analog_pol[10]),
    .ANALOG_SEL(gpio_analog_sel[10]),
    .DM({ gpio_dm2[10], gpio_dm1[10], gpio_dm0[10] }),
    .ENABLE_H(porb_h),
    .ENABLE_INP_H(\loop0_gpio[10] ),
    .ENABLE_VDDA_H(porb_h),
    .ENABLE_VDDIO(gpio_loopback_one[10]),
    .ENABLE_VSWITCH_H(\loop0_gpio[10] ),
    .HLD_H_N(\loop1_gpio[10] ),
    .HLD_OVR(gpio_holdover[10]),
    .IB_MODE_SEL(gpio_ib_mode_sel[10]),
    .IN(gpio_in[10]),
    .INP_DIS(gpio_inp_dis[10]),
    .IN_H(gpio_in_h[10]),
    .OE_N(gpio_oeb[10]),
    .OUT(gpio_out[10]),
    .PAD(gpio[10]),
    .PAD_A_ESD_0_H(analog_io[10]),
    .PAD_A_NOESD_H(analog_noesd_io[10]),
    .SLOW(gpio_slow_sel[10]),
    .TIE_HI_ESD(\loop1_gpio[10] ),
    .TIE_LO_ESD(\loop0_gpio[10] ),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda1),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa1),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio),
    .VTRIP_SEL(gpio_vtrip_sel[10])
  );
  sky130_ef_io__gpiov2_pad \area1_gpio_pad[11]  (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .ANALOG_EN(gpio_analog_en[11]),
    .ANALOG_POL(gpio_analog_pol[11]),
    .ANALOG_SEL(gpio_analog_sel[11]),
    .DM({ gpio_dm2[11], gpio_dm1[11], gpio_dm0[11] }),
    .ENABLE_H(porb_h),
    .ENABLE_INP_H(\loop0_gpio[11] ),
    .ENABLE_VDDA_H(porb_h),
    .ENABLE_VDDIO(gpio_loopback_one[11]),
    .ENABLE_VSWITCH_H(\loop0_gpio[11] ),
    .HLD_H_N(\loop1_gpio[11] ),
    .HLD_OVR(gpio_holdover[11]),
    .IB_MODE_SEL(gpio_ib_mode_sel[11]),
    .IN(gpio_in[11]),
    .INP_DIS(gpio_inp_dis[11]),
    .IN_H(gpio_in_h[11]),
    .OE_N(gpio_oeb[11]),
    .OUT(gpio_out[11]),
    .PAD(gpio[11]),
    .PAD_A_ESD_0_H(analog_io[11]),
    .PAD_A_NOESD_H(analog_noesd_io[11]),
    .SLOW(gpio_slow_sel[11]),
    .TIE_HI_ESD(\loop1_gpio[11] ),
    .TIE_LO_ESD(\loop0_gpio[11] ),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda1),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa1),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio),
    .VTRIP_SEL(gpio_vtrip_sel[11])
  );
  sky130_ef_io__gpiov2_pad \area1_gpio_pad[12]  (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .ANALOG_EN(gpio_analog_en[12]),
    .ANALOG_POL(gpio_analog_pol[12]),
    .ANALOG_SEL(gpio_analog_sel[12]),
    .DM({ gpio_dm2[12], gpio_dm1[12], gpio_dm0[12] }),
    .ENABLE_H(porb_h),
    .ENABLE_INP_H(\loop0_gpio[12] ),
    .ENABLE_VDDA_H(porb_h),
    .ENABLE_VDDIO(gpio_loopback_one[12]),
    .ENABLE_VSWITCH_H(\loop0_gpio[12] ),
    .HLD_H_N(\loop1_gpio[12] ),
    .HLD_OVR(gpio_holdover[12]),
    .IB_MODE_SEL(gpio_ib_mode_sel[12]),
    .IN(gpio_in[12]),
    .INP_DIS(gpio_inp_dis[12]),
    .IN_H(gpio_in_h[12]),
    .OE_N(gpio_oeb[12]),
    .OUT(gpio_out[12]),
    .PAD(gpio[12]),
    .PAD_A_ESD_0_H(analog_io[12]),
    .PAD_A_NOESD_H(analog_noesd_io[12]),
    .SLOW(gpio_slow_sel[12]),
    .TIE_HI_ESD(\loop1_gpio[12] ),
    .TIE_LO_ESD(\loop0_gpio[12] ),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda1),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa1),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio),
    .VTRIP_SEL(gpio_vtrip_sel[12])
  );
  sky130_ef_io__gpiov2_pad \area1_gpio_pad[13]  (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .ANALOG_EN(gpio_analog_en[13]),
    .ANALOG_POL(gpio_analog_pol[13]),
    .ANALOG_SEL(gpio_analog_sel[13]),
    .DM({ gpio_dm2[13], gpio_dm1[13], gpio_dm0[13] }),
    .ENABLE_H(porb_h),
    .ENABLE_INP_H(\loop0_gpio[13] ),
    .ENABLE_VDDA_H(porb_h),
    .ENABLE_VDDIO(gpio_loopback_one[13]),
    .ENABLE_VSWITCH_H(\loop0_gpio[13] ),
    .HLD_H_N(\loop1_gpio[13] ),
    .HLD_OVR(gpio_holdover[13]),
    .IB_MODE_SEL(gpio_ib_mode_sel[13]),
    .IN(gpio_in[13]),
    .INP_DIS(gpio_inp_dis[13]),
    .IN_H(gpio_in_h[13]),
    .OE_N(gpio_oeb[13]),
    .OUT(gpio_out[13]),
    .PAD(gpio[13]),
    .PAD_A_ESD_0_H(analog_io[13]),
    .PAD_A_NOESD_H(analog_noesd_io[13]),
    .SLOW(gpio_slow_sel[13]),
    .TIE_HI_ESD(\loop1_gpio[13] ),
    .TIE_LO_ESD(\loop0_gpio[13] ),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda1),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa1),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio),
    .VTRIP_SEL(gpio_vtrip_sel[13])
  );
  sky130_ef_io__gpiov2_pad \area1_gpio_pad[14]  (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .ANALOG_EN(gpio_analog_en[14]),
    .ANALOG_POL(gpio_analog_pol[14]),
    .ANALOG_SEL(gpio_analog_sel[14]),
    .DM({ gpio_dm2[14], gpio_dm1[14], gpio_dm0[14] }),
    .ENABLE_H(porb_h),
    .ENABLE_INP_H(\loop0_gpio[14] ),
    .ENABLE_VDDA_H(porb_h),
    .ENABLE_VDDIO(gpio_loopback_one[14]),
    .ENABLE_VSWITCH_H(\loop0_gpio[14] ),
    .HLD_H_N(\loop1_gpio[14] ),
    .HLD_OVR(gpio_holdover[14]),
    .IB_MODE_SEL(gpio_ib_mode_sel[14]),
    .IN(gpio_in[14]),
    .INP_DIS(gpio_inp_dis[14]),
    .IN_H(gpio_in_h[14]),
    .OE_N(gpio_oeb[14]),
    .OUT(gpio_out[14]),
    .PAD(gpio[14]),
    .PAD_A_ESD_0_H(analog_io[14]),
    .PAD_A_NOESD_H(analog_noesd_io[14]),
    .SLOW(gpio_slow_sel[14]),
    .TIE_HI_ESD(\loop1_gpio[14] ),
    .TIE_LO_ESD(\loop0_gpio[14] ),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda1),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa1),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio),
    .VTRIP_SEL(gpio_vtrip_sel[14])
  );
  sky130_ef_io__gpiov2_pad \area1_gpio_pad[15]  (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .ANALOG_EN(gpio_analog_en[15]),
    .ANALOG_POL(gpio_analog_pol[15]),
    .ANALOG_SEL(gpio_analog_sel[15]),
    .DM({ gpio_dm2[15], gpio_dm1[15], gpio_dm0[15] }),
    .ENABLE_H(porb_h),
    .ENABLE_INP_H(\loop0_gpio[15] ),
    .ENABLE_VDDA_H(porb_h),
    .ENABLE_VDDIO(gpio_loopback_one[15]),
    .ENABLE_VSWITCH_H(\loop0_gpio[15] ),
    .HLD_H_N(\loop1_gpio[15] ),
    .HLD_OVR(gpio_holdover[15]),
    .IB_MODE_SEL(gpio_ib_mode_sel[15]),
    .IN(gpio_in[15]),
    .INP_DIS(gpio_inp_dis[15]),
    .IN_H(gpio_in_h[15]),
    .OE_N(gpio_oeb[15]),
    .OUT(gpio_out[15]),
    .PAD(gpio[15]),
    .PAD_A_ESD_0_H(analog_io[15]),
    .PAD_A_NOESD_H(analog_noesd_io[15]),
    .SLOW(gpio_slow_sel[15]),
    .TIE_HI_ESD(\loop1_gpio[15] ),
    .TIE_LO_ESD(\loop0_gpio[15] ),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda1),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa1),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio),
    .VTRIP_SEL(gpio_vtrip_sel[15])
  );
  sky130_ef_io__gpiov2_pad \area1_gpio_pad[16]  (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .ANALOG_EN(gpio_analog_en[16]),
    .ANALOG_POL(gpio_analog_pol[16]),
    .ANALOG_SEL(gpio_analog_sel[16]),
    .DM({ gpio_dm2[16], gpio_dm1[16], gpio_dm0[16] }),
    .ENABLE_H(porb_h),
    .ENABLE_INP_H(\loop0_gpio[16] ),
    .ENABLE_VDDA_H(porb_h),
    .ENABLE_VDDIO(gpio_loopback_one[16]),
    .ENABLE_VSWITCH_H(\loop0_gpio[16] ),
    .HLD_H_N(\loop1_gpio[16] ),
    .HLD_OVR(gpio_holdover[16]),
    .IB_MODE_SEL(gpio_ib_mode_sel[16]),
    .IN(gpio_in[16]),
    .INP_DIS(gpio_inp_dis[16]),
    .IN_H(gpio_in_h[16]),
    .OE_N(gpio_oeb[16]),
    .OUT(gpio_out[16]),
    .PAD(gpio[16]),
    .PAD_A_ESD_0_H(analog_io[16]),
    .PAD_A_NOESD_H(analog_noesd_io[16]),
    .SLOW(gpio_slow_sel[16]),
    .TIE_HI_ESD(\loop1_gpio[16] ),
    .TIE_LO_ESD(\loop0_gpio[16] ),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda1),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa1),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio),
    .VTRIP_SEL(gpio_vtrip_sel[16])
  );
  sky130_ef_io__gpiov2_pad \area1_gpio_pad[17]  (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .ANALOG_EN(gpio_analog_en[17]),
    .ANALOG_POL(gpio_analog_pol[17]),
    .ANALOG_SEL(gpio_analog_sel[17]),
    .DM({ gpio_dm2[17], gpio_dm1[17], gpio_dm0[17] }),
    .ENABLE_H(porb_h),
    .ENABLE_INP_H(\loop0_gpio[17] ),
    .ENABLE_VDDA_H(porb_h),
    .ENABLE_VDDIO(gpio_loopback_one[17]),
    .ENABLE_VSWITCH_H(\loop0_gpio[17] ),
    .HLD_H_N(\loop1_gpio[17] ),
    .HLD_OVR(gpio_holdover[17]),
    .IB_MODE_SEL(gpio_ib_mode_sel[17]),
    .IN(gpio_in[17]),
    .INP_DIS(gpio_inp_dis[17]),
    .IN_H(gpio_in_h[17]),
    .OE_N(gpio_oeb[17]),
    .OUT(gpio_out[17]),
    .PAD(gpio[17]),
    .PAD_A_ESD_0_H(analog_io[17]),
    .PAD_A_NOESD_H(analog_noesd_io[17]),
    .SLOW(gpio_slow_sel[17]),
    .TIE_HI_ESD(\loop1_gpio[17] ),
    .TIE_LO_ESD(\loop0_gpio[17] ),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda1),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa1),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio),
    .VTRIP_SEL(gpio_vtrip_sel[17])
  );
  sky130_ef_io__gpiov2_pad \area1_gpio_pad[18]  (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .ANALOG_EN(gpio_analog_en[18]),
    .ANALOG_POL(gpio_analog_pol[18]),
    .ANALOG_SEL(gpio_analog_sel[18]),
    .DM({ gpio_dm2[18], gpio_dm1[18], gpio_dm0[18] }),
    .ENABLE_H(porb_h),
    .ENABLE_INP_H(\loop0_gpio[18] ),
    .ENABLE_VDDA_H(porb_h),
    .ENABLE_VDDIO(gpio_loopback_one[18]),
    .ENABLE_VSWITCH_H(\loop0_gpio[18] ),
    .HLD_H_N(\loop1_gpio[18] ),
    .HLD_OVR(gpio_holdover[18]),
    .IB_MODE_SEL(gpio_ib_mode_sel[18]),
    .IN(gpio_in[18]),
    .INP_DIS(gpio_inp_dis[18]),
    .IN_H(gpio_in_h[18]),
    .OE_N(gpio_oeb[18]),
    .OUT(gpio_out[18]),
    .PAD(gpio[18]),
    .PAD_A_ESD_0_H(analog_io[18]),
    .PAD_A_NOESD_H(analog_noesd_io[18]),
    .SLOW(gpio_slow_sel[18]),
    .TIE_HI_ESD(\loop1_gpio[18] ),
    .TIE_LO_ESD(\loop0_gpio[18] ),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda1),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa1),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio),
    .VTRIP_SEL(gpio_vtrip_sel[18])
  );
  sky130_ef_io__gpiov2_pad \area1_gpio_pad[1]  (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .ANALOG_EN(gpio_analog_en[1]),
    .ANALOG_POL(gpio_analog_pol[1]),
    .ANALOG_SEL(gpio_analog_sel[1]),
    .DM({ gpio_dm2[1], gpio_dm1[1], gpio_dm0[1] }),
    .ENABLE_H(porb_h),
    .ENABLE_INP_H(\loop0_gpio[1] ),
    .ENABLE_VDDA_H(porb_h),
    .ENABLE_VDDIO(gpio_loopback_one[1]),
    .ENABLE_VSWITCH_H(\loop0_gpio[1] ),
    .HLD_H_N(\loop1_gpio[1] ),
    .HLD_OVR(gpio_holdover[1]),
    .IB_MODE_SEL(gpio_ib_mode_sel[1]),
    .IN(gpio_in[1]),
    .INP_DIS(gpio_inp_dis[1]),
    .IN_H(gpio_in_h[1]),
    .OE_N(gpio_oeb[1]),
    .OUT(gpio_out[1]),
    .PAD(gpio[1]),
    .PAD_A_ESD_0_H(analog_io[1]),
    .PAD_A_NOESD_H(analog_noesd_io[1]),
    .SLOW(gpio_slow_sel[1]),
    .TIE_HI_ESD(\loop1_gpio[1] ),
    .TIE_LO_ESD(\loop0_gpio[1] ),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda1),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa1),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio),
    .VTRIP_SEL(gpio_vtrip_sel[1])
  );
  sky130_ef_io__gpiov2_pad \area1_gpio_pad[2]  (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .ANALOG_EN(gpio_analog_en[2]),
    .ANALOG_POL(gpio_analog_pol[2]),
    .ANALOG_SEL(gpio_analog_sel[2]),
    .DM({ gpio_dm2[2], gpio_dm1[2], gpio_dm0[2] }),
    .ENABLE_H(porb_h),
    .ENABLE_INP_H(\loop0_gpio[2] ),
    .ENABLE_VDDA_H(porb_h),
    .ENABLE_VDDIO(gpio_loopback_one[2]),
    .ENABLE_VSWITCH_H(\loop0_gpio[2] ),
    .HLD_H_N(\loop1_gpio[2] ),
    .HLD_OVR(gpio_holdover[2]),
    .IB_MODE_SEL(gpio_ib_mode_sel[2]),
    .IN(gpio_in[2]),
    .INP_DIS(gpio_inp_dis[2]),
    .IN_H(gpio_in_h[2]),
    .OE_N(gpio_oeb[2]),
    .OUT(gpio_out[2]),
    .PAD(gpio[2]),
    .PAD_A_ESD_0_H(analog_io[2]),
    .PAD_A_NOESD_H(analog_noesd_io[2]),
    .SLOW(gpio_slow_sel[2]),
    .TIE_HI_ESD(\loop1_gpio[2] ),
    .TIE_LO_ESD(\loop0_gpio[2] ),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda1),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa1),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio),
    .VTRIP_SEL(gpio_vtrip_sel[2])
  );
  sky130_ef_io__gpiov2_pad \area1_gpio_pad[3]  (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .ANALOG_EN(gpio_analog_en[3]),
    .ANALOG_POL(gpio_analog_pol[3]),
    .ANALOG_SEL(gpio_analog_sel[3]),
    .DM({ gpio_dm2[3], gpio_dm1[3], gpio_dm0[3] }),
    .ENABLE_H(porb_h),
    .ENABLE_INP_H(\loop0_gpio[3] ),
    .ENABLE_VDDA_H(porb_h),
    .ENABLE_VDDIO(gpio_loopback_one[3]),
    .ENABLE_VSWITCH_H(\loop0_gpio[3] ),
    .HLD_H_N(\loop1_gpio[3] ),
    .HLD_OVR(gpio_holdover[3]),
    .IB_MODE_SEL(gpio_ib_mode_sel[3]),
    .IN(gpio_in[3]),
    .INP_DIS(gpio_inp_dis[3]),
    .IN_H(gpio_in_h[3]),
    .OE_N(gpio_oeb[3]),
    .OUT(gpio_out[3]),
    .PAD(gpio[3]),
    .PAD_A_ESD_0_H(analog_io[3]),
    .PAD_A_NOESD_H(analog_noesd_io[3]),
    .SLOW(gpio_slow_sel[3]),
    .TIE_HI_ESD(\loop1_gpio[3] ),
    .TIE_LO_ESD(\loop0_gpio[3] ),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda1),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa1),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio),
    .VTRIP_SEL(gpio_vtrip_sel[3])
  );
  sky130_ef_io__gpiov2_pad \area1_gpio_pad[4]  (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .ANALOG_EN(gpio_analog_en[4]),
    .ANALOG_POL(gpio_analog_pol[4]),
    .ANALOG_SEL(gpio_analog_sel[4]),
    .DM({ gpio_dm2[4], gpio_dm1[4], gpio_dm0[4] }),
    .ENABLE_H(porb_h),
    .ENABLE_INP_H(\loop0_gpio[4] ),
    .ENABLE_VDDA_H(porb_h),
    .ENABLE_VDDIO(gpio_loopback_one[4]),
    .ENABLE_VSWITCH_H(\loop0_gpio[4] ),
    .HLD_H_N(\loop1_gpio[4] ),
    .HLD_OVR(gpio_holdover[4]),
    .IB_MODE_SEL(gpio_ib_mode_sel[4]),
    .IN(gpio_in[4]),
    .INP_DIS(gpio_inp_dis[4]),
    .IN_H(gpio_in_h[4]),
    .OE_N(gpio_oeb[4]),
    .OUT(gpio_out[4]),
    .PAD(gpio[4]),
    .PAD_A_ESD_0_H(analog_io[4]),
    .PAD_A_NOESD_H(analog_noesd_io[4]),
    .SLOW(gpio_slow_sel[4]),
    .TIE_HI_ESD(\loop1_gpio[4] ),
    .TIE_LO_ESD(\loop0_gpio[4] ),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda1),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa1),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio),
    .VTRIP_SEL(gpio_vtrip_sel[4])
  );
  sky130_ef_io__gpiov2_pad \area1_gpio_pad[5]  (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .ANALOG_EN(gpio_analog_en[5]),
    .ANALOG_POL(gpio_analog_pol[5]),
    .ANALOG_SEL(gpio_analog_sel[5]),
    .DM({ gpio_dm2[5], gpio_dm1[5], gpio_dm0[5] }),
    .ENABLE_H(porb_h),
    .ENABLE_INP_H(\loop0_gpio[5] ),
    .ENABLE_VDDA_H(porb_h),
    .ENABLE_VDDIO(gpio_loopback_one[5]),
    .ENABLE_VSWITCH_H(\loop0_gpio[5] ),
    .HLD_H_N(\loop1_gpio[5] ),
    .HLD_OVR(gpio_holdover[5]),
    .IB_MODE_SEL(gpio_ib_mode_sel[5]),
    .IN(gpio_in[5]),
    .INP_DIS(gpio_inp_dis[5]),
    .IN_H(gpio_in_h[5]),
    .OE_N(gpio_oeb[5]),
    .OUT(gpio_out[5]),
    .PAD(gpio[5]),
    .PAD_A_ESD_0_H(analog_io[5]),
    .PAD_A_NOESD_H(analog_noesd_io[5]),
    .SLOW(gpio_slow_sel[5]),
    .TIE_HI_ESD(\loop1_gpio[5] ),
    .TIE_LO_ESD(\loop0_gpio[5] ),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda1),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa1),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio),
    .VTRIP_SEL(gpio_vtrip_sel[5])
  );
  sky130_ef_io__gpiov2_pad \area1_gpio_pad[6]  (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .ANALOG_EN(gpio_analog_en[6]),
    .ANALOG_POL(gpio_analog_pol[6]),
    .ANALOG_SEL(gpio_analog_sel[6]),
    .DM({ gpio_dm2[6], gpio_dm1[6], gpio_dm0[6] }),
    .ENABLE_H(porb_h),
    .ENABLE_INP_H(\loop0_gpio[6] ),
    .ENABLE_VDDA_H(porb_h),
    .ENABLE_VDDIO(gpio_loopback_one[6]),
    .ENABLE_VSWITCH_H(\loop0_gpio[6] ),
    .HLD_H_N(\loop1_gpio[6] ),
    .HLD_OVR(gpio_holdover[6]),
    .IB_MODE_SEL(gpio_ib_mode_sel[6]),
    .IN(gpio_in[6]),
    .INP_DIS(gpio_inp_dis[6]),
    .IN_H(gpio_in_h[6]),
    .OE_N(gpio_oeb[6]),
    .OUT(gpio_out[6]),
    .PAD(gpio[6]),
    .PAD_A_ESD_0_H(analog_io[6]),
    .PAD_A_NOESD_H(analog_noesd_io[6]),
    .SLOW(gpio_slow_sel[6]),
    .TIE_HI_ESD(\loop1_gpio[6] ),
    .TIE_LO_ESD(\loop0_gpio[6] ),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda1),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa1),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio),
    .VTRIP_SEL(gpio_vtrip_sel[6])
  );
  sky130_ef_io__gpiov2_pad \area1_gpio_pad[7]  (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .ANALOG_EN(gpio_analog_en[7]),
    .ANALOG_POL(gpio_analog_pol[7]),
    .ANALOG_SEL(gpio_analog_sel[7]),
    .DM({ gpio_dm2[7], gpio_dm1[7], gpio_dm0[7] }),
    .ENABLE_H(porb_h),
    .ENABLE_INP_H(\loop0_gpio[7] ),
    .ENABLE_VDDA_H(porb_h),
    .ENABLE_VDDIO(gpio_loopback_one[7]),
    .ENABLE_VSWITCH_H(\loop0_gpio[7] ),
    .HLD_H_N(\loop1_gpio[7] ),
    .HLD_OVR(gpio_holdover[7]),
    .IB_MODE_SEL(gpio_ib_mode_sel[7]),
    .IN(gpio_in[7]),
    .INP_DIS(gpio_inp_dis[7]),
    .IN_H(gpio_in_h[7]),
    .OE_N(gpio_oeb[7]),
    .OUT(gpio_out[7]),
    .PAD(gpio[7]),
    .PAD_A_ESD_0_H(analog_io[7]),
    .PAD_A_NOESD_H(analog_noesd_io[7]),
    .SLOW(gpio_slow_sel[7]),
    .TIE_HI_ESD(\loop1_gpio[7] ),
    .TIE_LO_ESD(\loop0_gpio[7] ),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda1),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa1),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio),
    .VTRIP_SEL(gpio_vtrip_sel[7])
  );
  sky130_ef_io__gpiov2_pad \area1_gpio_pad[8]  (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .ANALOG_EN(gpio_analog_en[8]),
    .ANALOG_POL(gpio_analog_pol[8]),
    .ANALOG_SEL(gpio_analog_sel[8]),
    .DM({ gpio_dm2[8], gpio_dm1[8], gpio_dm0[8] }),
    .ENABLE_H(porb_h),
    .ENABLE_INP_H(\loop0_gpio[8] ),
    .ENABLE_VDDA_H(porb_h),
    .ENABLE_VDDIO(gpio_loopback_one[8]),
    .ENABLE_VSWITCH_H(\loop0_gpio[8] ),
    .HLD_H_N(\loop1_gpio[8] ),
    .HLD_OVR(gpio_holdover[8]),
    .IB_MODE_SEL(gpio_ib_mode_sel[8]),
    .IN(gpio_in[8]),
    .INP_DIS(gpio_inp_dis[8]),
    .IN_H(gpio_in_h[8]),
    .OE_N(gpio_oeb[8]),
    .OUT(gpio_out[8]),
    .PAD(gpio[8]),
    .PAD_A_ESD_0_H(analog_io[8]),
    .PAD_A_NOESD_H(analog_noesd_io[8]),
    .SLOW(gpio_slow_sel[8]),
    .TIE_HI_ESD(\loop1_gpio[8] ),
    .TIE_LO_ESD(\loop0_gpio[8] ),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda1),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa1),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio),
    .VTRIP_SEL(gpio_vtrip_sel[8])
  );
  sky130_ef_io__gpiov2_pad \area1_gpio_pad[9]  (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .ANALOG_EN(gpio_analog_en[9]),
    .ANALOG_POL(gpio_analog_pol[9]),
    .ANALOG_SEL(gpio_analog_sel[9]),
    .DM({ gpio_dm2[9], gpio_dm1[9], gpio_dm0[9] }),
    .ENABLE_H(porb_h),
    .ENABLE_INP_H(\loop0_gpio[9] ),
    .ENABLE_VDDA_H(porb_h),
    .ENABLE_VDDIO(gpio_loopback_one[9]),
    .ENABLE_VSWITCH_H(\loop0_gpio[9] ),
    .HLD_H_N(\loop1_gpio[9] ),
    .HLD_OVR(gpio_holdover[9]),
    .IB_MODE_SEL(gpio_ib_mode_sel[9]),
    .IN(gpio_in[9]),
    .INP_DIS(gpio_inp_dis[9]),
    .IN_H(gpio_in_h[9]),
    .OE_N(gpio_oeb[9]),
    .OUT(gpio_out[9]),
    .PAD(gpio[9]),
    .PAD_A_ESD_0_H(analog_io[9]),
    .PAD_A_NOESD_H(analog_noesd_io[9]),
    .SLOW(gpio_slow_sel[9]),
    .TIE_HI_ESD(\loop1_gpio[9] ),
    .TIE_LO_ESD(\loop0_gpio[9] ),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda1),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa1),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio),
    .VTRIP_SEL(gpio_vtrip_sel[9])
  );
  sky130_ef_io__gpiov2_pad \area2_gpio_pad[0]  (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .ANALOG_EN(gpio_analog_en[19]),
    .ANALOG_POL(gpio_analog_pol[19]),
    .ANALOG_SEL(gpio_analog_sel[19]),
    .DM({ gpio_dm2[19], gpio_dm1[19], gpio_dm0[19] }),
    .ENABLE_H(porb_h),
    .ENABLE_INP_H(\loop0_gpio[19] ),
    .ENABLE_VDDA_H(porb_h),
    .ENABLE_VDDIO(gpio_loopback_one[19]),
    .ENABLE_VSWITCH_H(\loop0_gpio[19] ),
    .HLD_H_N(\loop1_gpio[19] ),
    .HLD_OVR(gpio_holdover[19]),
    .IB_MODE_SEL(gpio_ib_mode_sel[19]),
    .IN(gpio_in[19]),
    .INP_DIS(gpio_inp_dis[19]),
    .IN_H(gpio_in_h[19]),
    .OE_N(gpio_oeb[19]),
    .OUT(gpio_out[19]),
    .PAD(gpio[19]),
    .PAD_A_ESD_0_H(analog_io[19]),
    .PAD_A_NOESD_H(analog_noesd_io[19]),
    .SLOW(gpio_slow_sel[19]),
    .TIE_HI_ESD(\loop1_gpio[19] ),
    .TIE_LO_ESD(\loop0_gpio[19] ),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda2),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa2),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio),
    .VTRIP_SEL(gpio_vtrip_sel[19])
  );
  sky130_ef_io__gpiov2_pad \area2_gpio_pad[10]  (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .ANALOG_EN(gpio_analog_en[29]),
    .ANALOG_POL(gpio_analog_pol[29]),
    .ANALOG_SEL(gpio_analog_sel[29]),
    .DM({ gpio_dm2[29], gpio_dm1[29], gpio_dm0[29] }),
    .ENABLE_H(porb_h),
    .ENABLE_INP_H(\loop0_gpio[29] ),
    .ENABLE_VDDA_H(porb_h),
    .ENABLE_VDDIO(gpio_loopback_one[29]),
    .ENABLE_VSWITCH_H(\loop0_gpio[29] ),
    .HLD_H_N(\loop1_gpio[29] ),
    .HLD_OVR(gpio_holdover[29]),
    .IB_MODE_SEL(gpio_ib_mode_sel[29]),
    .IN(gpio_in[29]),
    .INP_DIS(gpio_inp_dis[29]),
    .IN_H(gpio_in_h[29]),
    .OE_N(gpio_oeb[29]),
    .OUT(gpio_out[29]),
    .PAD(gpio[29]),
    .PAD_A_ESD_0_H(analog_io[29]),
    .PAD_A_NOESD_H(analog_noesd_io[29]),
    .SLOW(gpio_slow_sel[29]),
    .TIE_HI_ESD(\loop1_gpio[29] ),
    .TIE_LO_ESD(\loop0_gpio[29] ),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda2),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa2),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio),
    .VTRIP_SEL(gpio_vtrip_sel[29])
  );
  sky130_ef_io__gpiov2_pad \area2_gpio_pad[11]  (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .ANALOG_EN(gpio_analog_en[30]),
    .ANALOG_POL(gpio_analog_pol[30]),
    .ANALOG_SEL(gpio_analog_sel[30]),
    .DM({ gpio_dm2[30], gpio_dm1[30], gpio_dm0[30] }),
    .ENABLE_H(porb_h),
    .ENABLE_INP_H(\loop0_gpio[30] ),
    .ENABLE_VDDA_H(porb_h),
    .ENABLE_VDDIO(gpio_loopback_one[30]),
    .ENABLE_VSWITCH_H(\loop0_gpio[30] ),
    .HLD_H_N(\loop1_gpio[30] ),
    .HLD_OVR(gpio_holdover[30]),
    .IB_MODE_SEL(gpio_ib_mode_sel[30]),
    .IN(gpio_in[30]),
    .INP_DIS(gpio_inp_dis[30]),
    .IN_H(gpio_in_h[30]),
    .OE_N(gpio_oeb[30]),
    .OUT(gpio_out[30]),
    .PAD(gpio[30]),
    .PAD_A_ESD_0_H(analog_io[30]),
    .PAD_A_NOESD_H(analog_noesd_io[30]),
    .SLOW(gpio_slow_sel[30]),
    .TIE_HI_ESD(\loop1_gpio[30] ),
    .TIE_LO_ESD(\loop0_gpio[30] ),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda2),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa2),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio),
    .VTRIP_SEL(gpio_vtrip_sel[30])
  );
  sky130_ef_io__gpiov2_pad \area2_gpio_pad[12]  (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .ANALOG_EN(gpio_analog_en[31]),
    .ANALOG_POL(gpio_analog_pol[31]),
    .ANALOG_SEL(gpio_analog_sel[31]),
    .DM({ gpio_dm2[31], gpio_dm1[31], gpio_dm0[31] }),
    .ENABLE_H(porb_h),
    .ENABLE_INP_H(\loop0_gpio[31] ),
    .ENABLE_VDDA_H(porb_h),
    .ENABLE_VDDIO(gpio_loopback_one[31]),
    .ENABLE_VSWITCH_H(\loop0_gpio[31] ),
    .HLD_H_N(\loop1_gpio[31] ),
    .HLD_OVR(gpio_holdover[31]),
    .IB_MODE_SEL(gpio_ib_mode_sel[31]),
    .IN(gpio_in[31]),
    .INP_DIS(gpio_inp_dis[31]),
    .IN_H(gpio_in_h[31]),
    .OE_N(gpio_oeb[31]),
    .OUT(gpio_out[31]),
    .PAD(gpio[31]),
    .PAD_A_ESD_0_H(analog_io[31]),
    .PAD_A_NOESD_H(analog_noesd_io[31]),
    .SLOW(gpio_slow_sel[31]),
    .TIE_HI_ESD(\loop1_gpio[31] ),
    .TIE_LO_ESD(\loop0_gpio[31] ),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda2),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa2),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio),
    .VTRIP_SEL(gpio_vtrip_sel[31])
  );
  sky130_ef_io__gpiov2_pad \area2_gpio_pad[13]  (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .ANALOG_EN(gpio_analog_en[32]),
    .ANALOG_POL(gpio_analog_pol[32]),
    .ANALOG_SEL(gpio_analog_sel[32]),
    .DM({ gpio_dm2[32], gpio_dm1[32], gpio_dm0[32] }),
    .ENABLE_H(porb_h),
    .ENABLE_INP_H(\loop0_gpio[32] ),
    .ENABLE_VDDA_H(porb_h),
    .ENABLE_VDDIO(gpio_loopback_one[32]),
    .ENABLE_VSWITCH_H(\loop0_gpio[32] ),
    .HLD_H_N(\loop1_gpio[32] ),
    .HLD_OVR(gpio_holdover[32]),
    .IB_MODE_SEL(gpio_ib_mode_sel[32]),
    .IN(gpio_in[32]),
    .INP_DIS(gpio_inp_dis[32]),
    .IN_H(gpio_in_h[32]),
    .OE_N(gpio_oeb[32]),
    .OUT(gpio_out[32]),
    .PAD(gpio[32]),
    .PAD_A_ESD_0_H(analog_io[32]),
    .PAD_A_NOESD_H(analog_noesd_io[32]),
    .SLOW(gpio_slow_sel[32]),
    .TIE_HI_ESD(\loop1_gpio[32] ),
    .TIE_LO_ESD(\loop0_gpio[32] ),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda2),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa2),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio),
    .VTRIP_SEL(gpio_vtrip_sel[32])
  );
  sky130_ef_io__gpiov2_pad \area2_gpio_pad[14]  (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .ANALOG_EN(gpio_analog_en[33]),
    .ANALOG_POL(gpio_analog_pol[33]),
    .ANALOG_SEL(gpio_analog_sel[33]),
    .DM({ gpio_dm2[33], gpio_dm1[33], gpio_dm0[33] }),
    .ENABLE_H(porb_h),
    .ENABLE_INP_H(\loop0_gpio[33] ),
    .ENABLE_VDDA_H(porb_h),
    .ENABLE_VDDIO(gpio_loopback_one[33]),
    .ENABLE_VSWITCH_H(\loop0_gpio[33] ),
    .HLD_H_N(\loop1_gpio[33] ),
    .HLD_OVR(gpio_holdover[33]),
    .IB_MODE_SEL(gpio_ib_mode_sel[33]),
    .IN(gpio_in[33]),
    .INP_DIS(gpio_inp_dis[33]),
    .IN_H(gpio_in_h[33]),
    .OE_N(gpio_oeb[33]),
    .OUT(gpio_out[33]),
    .PAD(gpio[33]),
    .PAD_A_ESD_0_H(analog_io[33]),
    .PAD_A_NOESD_H(analog_noesd_io[33]),
    .SLOW(gpio_slow_sel[33]),
    .TIE_HI_ESD(\loop1_gpio[33] ),
    .TIE_LO_ESD(\loop0_gpio[33] ),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda2),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa2),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio),
    .VTRIP_SEL(gpio_vtrip_sel[33])
  );
  sky130_ef_io__gpiov2_pad \area2_gpio_pad[15]  (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .ANALOG_EN(gpio_analog_en[34]),
    .ANALOG_POL(gpio_analog_pol[34]),
    .ANALOG_SEL(gpio_analog_sel[34]),
    .DM({ gpio_dm2[34], gpio_dm1[34], gpio_dm0[34] }),
    .ENABLE_H(porb_h),
    .ENABLE_INP_H(\loop0_gpio[34] ),
    .ENABLE_VDDA_H(porb_h),
    .ENABLE_VDDIO(gpio_loopback_one[34]),
    .ENABLE_VSWITCH_H(\loop0_gpio[34] ),
    .HLD_H_N(\loop1_gpio[34] ),
    .HLD_OVR(gpio_holdover[34]),
    .IB_MODE_SEL(gpio_ib_mode_sel[34]),
    .IN(gpio_in[34]),
    .INP_DIS(gpio_inp_dis[34]),
    .IN_H(gpio_in_h[34]),
    .OE_N(gpio_oeb[34]),
    .OUT(gpio_out[34]),
    .PAD(gpio[34]),
    .PAD_A_ESD_0_H(analog_io[34]),
    .PAD_A_NOESD_H(analog_noesd_io[34]),
    .SLOW(gpio_slow_sel[34]),
    .TIE_HI_ESD(\loop1_gpio[34] ),
    .TIE_LO_ESD(\loop0_gpio[34] ),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda2),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa2),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio),
    .VTRIP_SEL(gpio_vtrip_sel[34])
  );
  sky130_ef_io__gpiov2_pad \area2_gpio_pad[16]  (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .ANALOG_EN(gpio_analog_en[35]),
    .ANALOG_POL(gpio_analog_pol[35]),
    .ANALOG_SEL(gpio_analog_sel[35]),
    .DM({ gpio_dm2[35], gpio_dm1[35], gpio_dm0[35] }),
    .ENABLE_H(porb_h),
    .ENABLE_INP_H(\loop0_gpio[35] ),
    .ENABLE_VDDA_H(porb_h),
    .ENABLE_VDDIO(gpio_loopback_one[35]),
    .ENABLE_VSWITCH_H(\loop0_gpio[35] ),
    .HLD_H_N(\loop1_gpio[35] ),
    .HLD_OVR(gpio_holdover[35]),
    .IB_MODE_SEL(gpio_ib_mode_sel[35]),
    .IN(gpio_in[35]),
    .INP_DIS(gpio_inp_dis[35]),
    .IN_H(gpio_in_h[35]),
    .OE_N(gpio_oeb[35]),
    .OUT(gpio_out[35]),
    .PAD(gpio[35]),
    .PAD_A_ESD_0_H(analog_io[35]),
    .PAD_A_NOESD_H(analog_noesd_io[35]),
    .SLOW(gpio_slow_sel[35]),
    .TIE_HI_ESD(\loop1_gpio[35] ),
    .TIE_LO_ESD(\loop0_gpio[35] ),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda2),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa2),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio),
    .VTRIP_SEL(gpio_vtrip_sel[35])
  );
  sky130_ef_io__gpiov2_pad \area2_gpio_pad[17]  (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .ANALOG_EN(gpio_analog_en[36]),
    .ANALOG_POL(gpio_analog_pol[36]),
    .ANALOG_SEL(gpio_analog_sel[36]),
    .DM({ gpio_dm2[36], gpio_dm1[36], gpio_dm0[36] }),
    .ENABLE_H(porb_h),
    .ENABLE_INP_H(\loop0_gpio[36] ),
    .ENABLE_VDDA_H(porb_h),
    .ENABLE_VDDIO(gpio_loopback_one[36]),
    .ENABLE_VSWITCH_H(\loop0_gpio[36] ),
    .HLD_H_N(\loop1_gpio[36] ),
    .HLD_OVR(gpio_holdover[36]),
    .IB_MODE_SEL(gpio_ib_mode_sel[36]),
    .IN(gpio_in[36]),
    .INP_DIS(gpio_inp_dis[36]),
    .IN_H(gpio_in_h[36]),
    .OE_N(gpio_oeb[36]),
    .OUT(gpio_out[36]),
    .PAD(gpio[36]),
    .PAD_A_ESD_0_H(analog_io[36]),
    .PAD_A_NOESD_H(analog_noesd_io[36]),
    .SLOW(gpio_slow_sel[36]),
    .TIE_HI_ESD(\loop1_gpio[36] ),
    .TIE_LO_ESD(\loop0_gpio[36] ),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda2),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa2),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio),
    .VTRIP_SEL(gpio_vtrip_sel[36])
  );
  sky130_ef_io__gpiov2_pad \area2_gpio_pad[18]  (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .ANALOG_EN(gpio_analog_en[37]),
    .ANALOG_POL(gpio_analog_pol[37]),
    .ANALOG_SEL(gpio_analog_sel[37]),
    .DM({ gpio_dm2[37], gpio_dm1[37], gpio_dm0[37] }),
    .ENABLE_H(porb_h),
    .ENABLE_INP_H(\loop0_gpio[37] ),
    .ENABLE_VDDA_H(porb_h),
    .ENABLE_VDDIO(gpio_loopback_one[37]),
    .ENABLE_VSWITCH_H(\loop0_gpio[37] ),
    .HLD_H_N(\loop1_gpio[37] ),
    .HLD_OVR(gpio_holdover[37]),
    .IB_MODE_SEL(gpio_ib_mode_sel[37]),
    .IN(gpio_in[37]),
    .INP_DIS(gpio_inp_dis[37]),
    .IN_H(gpio_in_h[37]),
    .OE_N(gpio_oeb[37]),
    .OUT(gpio_out[37]),
    .PAD(gpio[37]),
    .PAD_A_ESD_0_H(analog_io[37]),
    .PAD_A_NOESD_H(analog_noesd_io[37]),
    .SLOW(gpio_slow_sel[37]),
    .TIE_HI_ESD(\loop1_gpio[37] ),
    .TIE_LO_ESD(\loop0_gpio[37] ),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda2),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa2),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio),
    .VTRIP_SEL(gpio_vtrip_sel[37])
  );
  sky130_ef_io__gpiov2_pad \area2_gpio_pad[1]  (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .ANALOG_EN(gpio_analog_en[20]),
    .ANALOG_POL(gpio_analog_pol[20]),
    .ANALOG_SEL(gpio_analog_sel[20]),
    .DM({ gpio_dm2[20], gpio_dm1[20], gpio_dm0[20] }),
    .ENABLE_H(porb_h),
    .ENABLE_INP_H(\loop0_gpio[20] ),
    .ENABLE_VDDA_H(porb_h),
    .ENABLE_VDDIO(gpio_loopback_one[20]),
    .ENABLE_VSWITCH_H(\loop0_gpio[20] ),
    .HLD_H_N(\loop1_gpio[20] ),
    .HLD_OVR(gpio_holdover[20]),
    .IB_MODE_SEL(gpio_ib_mode_sel[20]),
    .IN(gpio_in[20]),
    .INP_DIS(gpio_inp_dis[20]),
    .IN_H(gpio_in_h[20]),
    .OE_N(gpio_oeb[20]),
    .OUT(gpio_out[20]),
    .PAD(gpio[20]),
    .PAD_A_ESD_0_H(analog_io[20]),
    .PAD_A_NOESD_H(analog_noesd_io[20]),
    .SLOW(gpio_slow_sel[20]),
    .TIE_HI_ESD(\loop1_gpio[20] ),
    .TIE_LO_ESD(\loop0_gpio[20] ),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda2),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa2),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio),
    .VTRIP_SEL(gpio_vtrip_sel[20])
  );
  sky130_ef_io__gpiov2_pad \area2_gpio_pad[2]  (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .ANALOG_EN(gpio_analog_en[21]),
    .ANALOG_POL(gpio_analog_pol[21]),
    .ANALOG_SEL(gpio_analog_sel[21]),
    .DM({ gpio_dm2[21], gpio_dm1[21], gpio_dm0[21] }),
    .ENABLE_H(porb_h),
    .ENABLE_INP_H(\loop0_gpio[21] ),
    .ENABLE_VDDA_H(porb_h),
    .ENABLE_VDDIO(gpio_loopback_one[21]),
    .ENABLE_VSWITCH_H(\loop0_gpio[21] ),
    .HLD_H_N(\loop1_gpio[21] ),
    .HLD_OVR(gpio_holdover[21]),
    .IB_MODE_SEL(gpio_ib_mode_sel[21]),
    .IN(gpio_in[21]),
    .INP_DIS(gpio_inp_dis[21]),
    .IN_H(gpio_in_h[21]),
    .OE_N(gpio_oeb[21]),
    .OUT(gpio_out[21]),
    .PAD(gpio[21]),
    .PAD_A_ESD_0_H(analog_io[21]),
    .PAD_A_NOESD_H(analog_noesd_io[21]),
    .SLOW(gpio_slow_sel[21]),
    .TIE_HI_ESD(\loop1_gpio[21] ),
    .TIE_LO_ESD(\loop0_gpio[21] ),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda2),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa2),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio),
    .VTRIP_SEL(gpio_vtrip_sel[21])
  );
  sky130_ef_io__gpiov2_pad \area2_gpio_pad[3]  (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .ANALOG_EN(gpio_analog_en[22]),
    .ANALOG_POL(gpio_analog_pol[22]),
    .ANALOG_SEL(gpio_analog_sel[22]),
    .DM({ gpio_dm2[22], gpio_dm1[22], gpio_dm0[22] }),
    .ENABLE_H(porb_h),
    .ENABLE_INP_H(\loop0_gpio[22] ),
    .ENABLE_VDDA_H(porb_h),
    .ENABLE_VDDIO(gpio_loopback_one[22]),
    .ENABLE_VSWITCH_H(\loop0_gpio[22] ),
    .HLD_H_N(\loop1_gpio[22] ),
    .HLD_OVR(gpio_holdover[22]),
    .IB_MODE_SEL(gpio_ib_mode_sel[22]),
    .IN(gpio_in[22]),
    .INP_DIS(gpio_inp_dis[22]),
    .IN_H(gpio_in_h[22]),
    .OE_N(gpio_oeb[22]),
    .OUT(gpio_out[22]),
    .PAD(gpio[22]),
    .PAD_A_ESD_0_H(analog_io[22]),
    .PAD_A_NOESD_H(analog_noesd_io[22]),
    .SLOW(gpio_slow_sel[22]),
    .TIE_HI_ESD(\loop1_gpio[22] ),
    .TIE_LO_ESD(\loop0_gpio[22] ),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda2),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa2),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio),
    .VTRIP_SEL(gpio_vtrip_sel[22])
  );
  sky130_ef_io__gpiov2_pad \area2_gpio_pad[4]  (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .ANALOG_EN(gpio_analog_en[23]),
    .ANALOG_POL(gpio_analog_pol[23]),
    .ANALOG_SEL(gpio_analog_sel[23]),
    .DM({ gpio_dm2[23], gpio_dm1[23], gpio_dm0[23] }),
    .ENABLE_H(porb_h),
    .ENABLE_INP_H(\loop0_gpio[23] ),
    .ENABLE_VDDA_H(porb_h),
    .ENABLE_VDDIO(gpio_loopback_one[23]),
    .ENABLE_VSWITCH_H(\loop0_gpio[23] ),
    .HLD_H_N(\loop1_gpio[23] ),
    .HLD_OVR(gpio_holdover[23]),
    .IB_MODE_SEL(gpio_ib_mode_sel[23]),
    .IN(gpio_in[23]),
    .INP_DIS(gpio_inp_dis[23]),
    .IN_H(gpio_in_h[23]),
    .OE_N(gpio_oeb[23]),
    .OUT(gpio_out[23]),
    .PAD(gpio[23]),
    .PAD_A_ESD_0_H(analog_io[23]),
    .PAD_A_NOESD_H(analog_noesd_io[23]),
    .SLOW(gpio_slow_sel[23]),
    .TIE_HI_ESD(\loop1_gpio[23] ),
    .TIE_LO_ESD(\loop0_gpio[23] ),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda2),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa2),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio),
    .VTRIP_SEL(gpio_vtrip_sel[23])
  );
  sky130_ef_io__gpiov2_pad \area2_gpio_pad[5]  (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .ANALOG_EN(gpio_analog_en[24]),
    .ANALOG_POL(gpio_analog_pol[24]),
    .ANALOG_SEL(gpio_analog_sel[24]),
    .DM({ gpio_dm2[24], gpio_dm1[24], gpio_dm0[24] }),
    .ENABLE_H(porb_h),
    .ENABLE_INP_H(\loop0_gpio[24] ),
    .ENABLE_VDDA_H(porb_h),
    .ENABLE_VDDIO(gpio_loopback_one[24]),
    .ENABLE_VSWITCH_H(\loop0_gpio[24] ),
    .HLD_H_N(\loop1_gpio[24] ),
    .HLD_OVR(gpio_holdover[24]),
    .IB_MODE_SEL(gpio_ib_mode_sel[24]),
    .IN(gpio_in[24]),
    .INP_DIS(gpio_inp_dis[24]),
    .IN_H(gpio_in_h[24]),
    .OE_N(gpio_oeb[24]),
    .OUT(gpio_out[24]),
    .PAD(gpio[24]),
    .PAD_A_ESD_0_H(analog_io[24]),
    .PAD_A_NOESD_H(analog_noesd_io[24]),
    .SLOW(gpio_slow_sel[24]),
    .TIE_HI_ESD(\loop1_gpio[24] ),
    .TIE_LO_ESD(\loop0_gpio[24] ),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda2),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa2),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio),
    .VTRIP_SEL(gpio_vtrip_sel[24])
  );
  sky130_ef_io__gpiov2_pad \area2_gpio_pad[6]  (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .ANALOG_EN(gpio_analog_en[25]),
    .ANALOG_POL(gpio_analog_pol[25]),
    .ANALOG_SEL(gpio_analog_sel[25]),
    .DM({ gpio_dm2[25], gpio_dm1[25], gpio_dm0[25] }),
    .ENABLE_H(porb_h),
    .ENABLE_INP_H(\loop0_gpio[25] ),
    .ENABLE_VDDA_H(porb_h),
    .ENABLE_VDDIO(gpio_loopback_one[25]),
    .ENABLE_VSWITCH_H(\loop0_gpio[25] ),
    .HLD_H_N(\loop1_gpio[25] ),
    .HLD_OVR(gpio_holdover[25]),
    .IB_MODE_SEL(gpio_ib_mode_sel[25]),
    .IN(gpio_in[25]),
    .INP_DIS(gpio_inp_dis[25]),
    .IN_H(gpio_in_h[25]),
    .OE_N(gpio_oeb[25]),
    .OUT(gpio_out[25]),
    .PAD(gpio[25]),
    .PAD_A_ESD_0_H(analog_io[25]),
    .PAD_A_NOESD_H(analog_noesd_io[25]),
    .SLOW(gpio_slow_sel[25]),
    .TIE_HI_ESD(\loop1_gpio[25] ),
    .TIE_LO_ESD(\loop0_gpio[25] ),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda2),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa2),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio),
    .VTRIP_SEL(gpio_vtrip_sel[25])
  );
  sky130_ef_io__gpiov2_pad \area2_gpio_pad[7]  (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .ANALOG_EN(gpio_analog_en[26]),
    .ANALOG_POL(gpio_analog_pol[26]),
    .ANALOG_SEL(gpio_analog_sel[26]),
    .DM({ gpio_dm2[26], gpio_dm1[26], gpio_dm0[26] }),
    .ENABLE_H(porb_h),
    .ENABLE_INP_H(\loop0_gpio[26] ),
    .ENABLE_VDDA_H(porb_h),
    .ENABLE_VDDIO(gpio_loopback_one[26]),
    .ENABLE_VSWITCH_H(\loop0_gpio[26] ),
    .HLD_H_N(\loop1_gpio[26] ),
    .HLD_OVR(gpio_holdover[26]),
    .IB_MODE_SEL(gpio_ib_mode_sel[26]),
    .IN(gpio_in[26]),
    .INP_DIS(gpio_inp_dis[26]),
    .IN_H(gpio_in_h[26]),
    .OE_N(gpio_oeb[26]),
    .OUT(gpio_out[26]),
    .PAD(gpio[26]),
    .PAD_A_ESD_0_H(analog_io[26]),
    .PAD_A_NOESD_H(analog_noesd_io[26]),
    .SLOW(gpio_slow_sel[26]),
    .TIE_HI_ESD(\loop1_gpio[26] ),
    .TIE_LO_ESD(\loop0_gpio[26] ),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda2),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa2),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio),
    .VTRIP_SEL(gpio_vtrip_sel[26])
  );
  sky130_ef_io__gpiov2_pad \area2_gpio_pad[8]  (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .ANALOG_EN(gpio_analog_en[27]),
    .ANALOG_POL(gpio_analog_pol[27]),
    .ANALOG_SEL(gpio_analog_sel[27]),
    .DM({ gpio_dm2[27], gpio_dm1[27], gpio_dm0[27] }),
    .ENABLE_H(porb_h),
    .ENABLE_INP_H(\loop0_gpio[27] ),
    .ENABLE_VDDA_H(porb_h),
    .ENABLE_VDDIO(gpio_loopback_one[27]),
    .ENABLE_VSWITCH_H(\loop0_gpio[27] ),
    .HLD_H_N(\loop1_gpio[27] ),
    .HLD_OVR(gpio_holdover[27]),
    .IB_MODE_SEL(gpio_ib_mode_sel[27]),
    .IN(gpio_in[27]),
    .INP_DIS(gpio_inp_dis[27]),
    .IN_H(gpio_in_h[27]),
    .OE_N(gpio_oeb[27]),
    .OUT(gpio_out[27]),
    .PAD(gpio[27]),
    .PAD_A_ESD_0_H(analog_io[27]),
    .PAD_A_NOESD_H(analog_noesd_io[27]),
    .SLOW(gpio_slow_sel[27]),
    .TIE_HI_ESD(\loop1_gpio[27] ),
    .TIE_LO_ESD(\loop0_gpio[27] ),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda2),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa2),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio),
    .VTRIP_SEL(gpio_vtrip_sel[27])
  );
  sky130_ef_io__gpiov2_pad \area2_gpio_pad[9]  (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .ANALOG_EN(gpio_analog_en[28]),
    .ANALOG_POL(gpio_analog_pol[28]),
    .ANALOG_SEL(gpio_analog_sel[28]),
    .DM({ gpio_dm2[28], gpio_dm1[28], gpio_dm0[28] }),
    .ENABLE_H(porb_h),
    .ENABLE_INP_H(\loop0_gpio[28] ),
    .ENABLE_VDDA_H(porb_h),
    .ENABLE_VDDIO(gpio_loopback_one[28]),
    .ENABLE_VSWITCH_H(\loop0_gpio[28] ),
    .HLD_H_N(\loop1_gpio[28] ),
    .HLD_OVR(gpio_holdover[28]),
    .IB_MODE_SEL(gpio_ib_mode_sel[28]),
    .IN(gpio_in[28]),
    .INP_DIS(gpio_inp_dis[28]),
    .IN_H(gpio_in_h[28]),
    .OE_N(gpio_oeb[28]),
    .OUT(gpio_out[28]),
    .PAD(gpio[28]),
    .PAD_A_ESD_0_H(analog_io[28]),
    .PAD_A_NOESD_H(analog_noesd_io[28]),
    .SLOW(gpio_slow_sel[28]),
    .TIE_HI_ESD(\loop1_gpio[28] ),
    .TIE_LO_ESD(\loop0_gpio[28] ),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda2),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa2),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio),
    .VTRIP_SEL(gpio_vtrip_sel[28])
  );
  constant_block \constant_value_inst[0]  (
    .one(gpio_loopback_one[0]),
    .vccd(vccd),
    .vssd(vssd),
    .zero(gpio_loopback_zero[0])
  );
  constant_block \constant_value_inst[10]  (
    .one(gpio_loopback_one[10]),
    .vccd(vccd),
    .vssd(vssd),
    .zero(gpio_loopback_zero[10])
  );
  constant_block \constant_value_inst[11]  (
    .one(gpio_loopback_one[11]),
    .vccd(vccd),
    .vssd(vssd),
    .zero(gpio_loopback_zero[11])
  );
  constant_block \constant_value_inst[12]  (
    .one(gpio_loopback_one[12]),
    .vccd(vccd),
    .vssd(vssd),
    .zero(gpio_loopback_zero[12])
  );
  constant_block \constant_value_inst[13]  (
    .one(gpio_loopback_one[13]),
    .vccd(vccd),
    .vssd(vssd),
    .zero(gpio_loopback_zero[13])
  );
  constant_block \constant_value_inst[14]  (
    .one(gpio_loopback_one[14]),
    .vccd(vccd),
    .vssd(vssd),
    .zero(gpio_loopback_zero[14])
  );
  constant_block \constant_value_inst[15]  (
    .one(gpio_loopback_one[15]),
    .vccd(vccd),
    .vssd(vssd),
    .zero(gpio_loopback_zero[15])
  );
  constant_block \constant_value_inst[16]  (
    .one(gpio_loopback_one[16]),
    .vccd(vccd),
    .vssd(vssd),
    .zero(gpio_loopback_zero[16])
  );
  constant_block \constant_value_inst[17]  (
    .one(gpio_loopback_one[17]),
    .vccd(vccd),
    .vssd(vssd),
    .zero(gpio_loopback_zero[17])
  );
  constant_block \constant_value_inst[18]  (
    .one(gpio_loopback_one[18]),
    .vccd(vccd),
    .vssd(vssd),
    .zero(gpio_loopback_zero[18])
  );
  constant_block \constant_value_inst[19]  (
    .one(gpio_loopback_one[19]),
    .vccd(vccd),
    .vssd(vssd),
    .zero(gpio_loopback_zero[19])
  );
  constant_block \constant_value_inst[1]  (
    .one(gpio_loopback_one[1]),
    .vccd(vccd),
    .vssd(vssd),
    .zero(gpio_loopback_zero[1])
  );
  constant_block \constant_value_inst[20]  (
    .one(gpio_loopback_one[20]),
    .vccd(vccd),
    .vssd(vssd),
    .zero(gpio_loopback_zero[20])
  );
  constant_block \constant_value_inst[21]  (
    .one(gpio_loopback_one[21]),
    .vccd(vccd),
    .vssd(vssd),
    .zero(gpio_loopback_zero[21])
  );
  constant_block \constant_value_inst[22]  (
    .one(gpio_loopback_one[22]),
    .vccd(vccd),
    .vssd(vssd),
    .zero(gpio_loopback_zero[22])
  );
  constant_block \constant_value_inst[23]  (
    .one(gpio_loopback_one[23]),
    .vccd(vccd),
    .vssd(vssd),
    .zero(gpio_loopback_zero[23])
  );
  constant_block \constant_value_inst[24]  (
    .one(gpio_loopback_one[24]),
    .vccd(vccd),
    .vssd(vssd),
    .zero(gpio_loopback_zero[24])
  );
  constant_block \constant_value_inst[25]  (
    .one(gpio_loopback_one[25]),
    .vccd(vccd),
    .vssd(vssd),
    .zero(gpio_loopback_zero[25])
  );
  constant_block \constant_value_inst[26]  (
    .one(gpio_loopback_one[26]),
    .vccd(vccd),
    .vssd(vssd),
    .zero(gpio_loopback_zero[26])
  );
  constant_block \constant_value_inst[27]  (
    .one(gpio_loopback_one[27]),
    .vccd(vccd),
    .vssd(vssd),
    .zero(gpio_loopback_zero[27])
  );
  constant_block \constant_value_inst[28]  (
    .one(gpio_loopback_one[28]),
    .vccd(vccd),
    .vssd(vssd),
    .zero(gpio_loopback_zero[28])
  );
  constant_block \constant_value_inst[29]  (
    .one(gpio_loopback_one[29]),
    .vccd(vccd),
    .vssd(vssd),
    .zero(gpio_loopback_zero[29])
  );
  constant_block \constant_value_inst[2]  (
    .one(gpio_loopback_one[2]),
    .vccd(vccd),
    .vssd(vssd),
    .zero(gpio_loopback_zero[2])
  );
  constant_block \constant_value_inst[30]  (
    .one(gpio_loopback_one[30]),
    .vccd(vccd),
    .vssd(vssd),
    .zero(gpio_loopback_zero[30])
  );
  constant_block \constant_value_inst[31]  (
    .one(gpio_loopback_one[31]),
    .vccd(vccd),
    .vssd(vssd),
    .zero(gpio_loopback_zero[31])
  );
  constant_block \constant_value_inst[32]  (
    .one(gpio_loopback_one[32]),
    .vccd(vccd),
    .vssd(vssd),
    .zero(gpio_loopback_zero[32])
  );
  constant_block \constant_value_inst[33]  (
    .one(gpio_loopback_one[33]),
    .vccd(vccd),
    .vssd(vssd),
    .zero(gpio_loopback_zero[33])
  );
  constant_block \constant_value_inst[34]  (
    .one(gpio_loopback_one[34]),
    .vccd(vccd),
    .vssd(vssd),
    .zero(gpio_loopback_zero[34])
  );
  constant_block \constant_value_inst[35]  (
    .one(gpio_loopback_one[35]),
    .vccd(vccd),
    .vssd(vssd),
    .zero(gpio_loopback_zero[35])
  );
  constant_block \constant_value_inst[36]  (
    .one(gpio_loopback_one[36]),
    .vccd(vccd),
    .vssd(vssd),
    .zero(gpio_loopback_zero[36])
  );
  constant_block \constant_value_inst[37]  (
    .one(gpio_loopback_one[37]),
    .vccd(vccd),
    .vssd(vssd),
    .zero(gpio_loopback_zero[37])
  );
  constant_block \constant_value_inst[38]  (
    .one(gpio_loopback_one[38]),
    .vccd(vccd),
    .vssd(vssd),
    .zero(gpio_loopback_zero[38])
  );
  constant_block \constant_value_inst[39]  (
    .one(gpio_loopback_one[39]),
    .vccd(vccd),
    .vssd(vssd),
    .zero(gpio_loopback_zero[39])
  );
  constant_block \constant_value_inst[3]  (
    .one(gpio_loopback_one[3]),
    .vccd(vccd),
    .vssd(vssd),
    .zero(gpio_loopback_zero[3])
  );
  constant_block \constant_value_inst[40]  (
    .one(gpio_loopback_one[40]),
    .vccd(vccd),
    .vssd(vssd),
    .zero(gpio_loopback_zero[40])
  );
  constant_block \constant_value_inst[41]  (
    .one(gpio_loopback_one[41]),
    .vccd(vccd),
    .vssd(vssd),
    .zero(gpio_loopback_zero[41])
  );
  constant_block \constant_value_inst[42]  (
    .one(gpio_loopback_one[42]),
    .vccd(vccd),
    .vssd(vssd),
    .zero(gpio_loopback_zero[42])
  );
  constant_block \constant_value_inst[43]  (
    .one(gpio_loopback_one[43]),
    .vccd(vccd),
    .vssd(vssd),
    .zero(gpio_loopback_zero[43])
  );
  constant_block \constant_value_inst[4]  (
    .one(gpio_loopback_one[4]),
    .vccd(vccd),
    .vssd(vssd),
    .zero(gpio_loopback_zero[4])
  );
  constant_block \constant_value_inst[5]  (
    .one(gpio_loopback_one[5]),
    .vccd(vccd),
    .vssd(vssd),
    .zero(gpio_loopback_zero[5])
  );
  constant_block \constant_value_inst[6]  (
    .one(gpio_loopback_one[6]),
    .vccd(vccd),
    .vssd(vssd),
    .zero(gpio_loopback_zero[6])
  );
  constant_block \constant_value_inst[7]  (
    .one(gpio_loopback_one[7]),
    .vccd(vccd),
    .vssd(vssd),
    .zero(gpio_loopback_zero[7])
  );
  constant_block \constant_value_inst[8]  (
    .one(gpio_loopback_one[8]),
    .vccd(vccd),
    .vssd(vssd),
    .zero(gpio_loopback_zero[8])
  );
  constant_block \constant_value_inst[9]  (
    .one(gpio_loopback_one[9]),
    .vccd(vccd),
    .vssd(vssd),
    .zero(gpio_loopback_zero[9])
  );
  constant_block constant_value_xres_inst (
    .one(xres_loopback_one),
    .vccd(vccd),
    .vssd(vssd),
    .zero(xres_loopback_zero)
  );
  sky130_fd_io__top_xres4v2 master_resetb_pad (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .DISABLE_PULLUP_H(xres_vss_loop),
    .ENABLE_H(porb_h),
    .ENABLE_VDDIO(xres_loopback_one),
    .EN_VDDIO_SIG_H(xres_vss_loop),
    .FILT_IN_H(xres_vss_loop),
    .INP_SEL_H(xres_vss_loop),
    .PAD(resetb_pad),
    .PAD_A_ESD_H(xresloop),
    .PULLUP_H(xres_vss_loop),
    .TIE_LO_ESD(xres_vss_loop),
    .TIE_WEAK_HI_H(xresloop),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio),
    .XRES_H_N(resetb_h)
  );
  simple_por por (
    .por_l(por_l),
    .porb_h(porb_h),
    .porb_l(porb_l),
    .vdd1v8(vccd),
    .vdd3v3(vddio),
    .vss1v8(vssd),
    .vss3v3(vssio)
  );
  xres_buf rstb_level (
    .A(resetb_h),
    .LVGND(vssd),
    .LVPWR(vccd),
    .VGND(vssio),
    .VPWR(vddio),
    .X(resetb_l)
  );
  sky130_ef_io__corner_pad \user0_corner[0]  (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio)
  );
  sky130_ef_io__corner_pad \user0_corner[1]  (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio)
  );
  sky130_ef_io__vccd_lvc_clamped_pad user0_vccd_lvclamp_pad (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .VCCD(vccd),
    .VCCD_PAD(vccd_pad),
    .VCCHIB(vccd),
    .VDDA(vdda),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio)
  );
  sky130_ef_io__vdda_hvc_clamped_pad user0_vdda_hvclamp_pad (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda),
    .VDDA_PAD(vdda_pad),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio)
  );
  sky130_ef_io__vddio_hvc_clamped_pad user0_vddio_hvclamp_pad_0 (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda),
    .VDDIO(vddio),
    .VDDIO_PAD(vddio_pad),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio)
  );
  sky130_ef_io__vddio_hvc_clamped_pad user0_vddio_hvclamp_pad_1 (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda2),
    .VDDIO(vddio),
    .VDDIO_PAD(vddio_pad2),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa2),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio)
  );
  sky130_ef_io__vssa_hvc_clamped_pad user0_vssa_hvclamp_pad (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa),
    .VSSA_PAD(vssa_pad),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio)
  );
  sky130_ef_io__vssd_lvc_clamped_pad user0_vssd_lvclamp_pad (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa),
    .VSSD(vssd),
    .VSSD_PAD(vssd_pad),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio)
  );
  sky130_ef_io__vssio_hvc_clamped_pad user0_vssio_hvclamp_pad_0 (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_PAD(vssio_pad),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio)
  );
  sky130_ef_io__vssio_hvc_clamped_pad user0_vssio_hvclamp_pad_1 (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda2),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa2),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_PAD(vssio_pad2),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio)
  );
  sky130_ef_io__corner_pad user1_corner (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda1),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa1),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio)
  );
  sky130_ef_io__vccd_lvc_clamped3_pad user1_vccd_lvclamp_pad (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .VCCD(vccd),
    .VCCD1(vccd1),
    .VCCD_PAD(vccd1_pad),
    .VCCHIB(vccd),
    .VDDA(vdda1),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa1),
    .VSSD(vssd),
    .VSSD1(vssd1),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio)
  );
  sky130_ef_io__vdda_hvc_clamped_pad user1_vdda_hvclamp_pad_0 (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda1),
    .VDDA_PAD(vdda1_pad),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa1),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio)
  );
  sky130_ef_io__vdda_hvc_clamped_pad user1_vdda_hvclamp_pad_1 (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda1),
    .VDDA_PAD(vdda1_pad2),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa1),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio)
  );
  sky130_ef_io__vssa_hvc_clamped_pad user1_vssa_hvclamp_pad_0 (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda1),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa1),
    .VSSA_PAD(vssa1_pad),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio)
  );
  sky130_ef_io__vssa_hvc_clamped_pad user1_vssa_hvclamp_pad_1 (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda1),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa1),
    .VSSA_PAD(vssa1_pad2),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio)
  );
  sky130_ef_io__vssd_lvc_clamped3_pad user1_vssd_lvclamp_pad (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .VCCD(vccd),
    .VCCD1(vccd1),
    .VCCHIB(vccd),
    .VDDA(vdda1),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa1),
    .VSSD(vssd),
    .VSSD1(vssd1),
    .VSSD_PAD(vssd1_pad),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio)
  );
  sky130_ef_io__corner_pad user2_corner (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda2),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa2),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio)
  );
  sky130_ef_io__vccd_lvc_clamped3_pad user2_vccd_lvclamp_pad (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .VCCD(vccd),
    .VCCD1(vccd2),
    .VCCD_PAD(vccd2_pad),
    .VCCHIB(vccd),
    .VDDA(vdda2),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa2),
    .VSSD(vssd),
    .VSSD1(vssd2),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio)
  );
  sky130_ef_io__vdda_hvc_clamped_pad user2_vdda_hvclamp_pad (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda2),
    .VDDA_PAD(vdda2_pad),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa2),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio)
  );
  sky130_ef_io__vssa_hvc_clamped_pad user2_vssa_hvclamp_pad (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .VCCD(vccd),
    .VCCHIB(vccd),
    .VDDA(vdda2),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa2),
    .VSSA_PAD(vssa2_pad),
    .VSSD(vssd),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio)
  );
  sky130_ef_io__vssd_lvc_clamped3_pad user2_vssd_lvclamp_pad (
    .AMUXBUS_A(analog_a),
    .AMUXBUS_B(analog_b),
    .VCCD(vccd),
    .VCCD1(vccd2),
    .VCCHIB(vccd),
    .VDDA(vdda2),
    .VDDIO(vddio),
    .VDDIO_Q(vddio_q),
    .VSSA(vssa2),
    .VSSD(vssd),
    .VSSD1(vssd2),
    .VSSD_PAD(vssd2_pad),
    .VSSIO(vssio),
    .VSSIO_Q(vssio_q),
    .VSWITCH(vddio)
  );
  user_id_programming user_id_value (
    .VGND(vssd),
    .VPWR(vccd),
    .mask_rev(mask_rev)
  );
  assign \gpio_dm_all[131]  = gpio_dm2[43];
  assign \gpio_dm_all[130]  = gpio_dm1[43];
  assign \gpio_dm_all[129]  = gpio_dm0[43];
  assign \gpio_dm_all[128]  = gpio_dm2[42];
  assign \gpio_dm_all[127]  = gpio_dm1[42];
  assign \gpio_dm_all[126]  = gpio_dm0[42];
  assign \gpio_dm_all[125]  = gpio_dm2[41];
  assign \gpio_dm_all[124]  = gpio_dm1[41];
  assign \gpio_dm_all[123]  = gpio_dm0[41];
  assign \gpio_dm_all[122]  = gpio_dm2[40];
  assign \gpio_dm_all[121]  = gpio_dm1[40];
  assign \gpio_dm_all[120]  = gpio_dm0[40];
  assign \gpio_dm_all[119]  = gpio_dm2[39];
  assign \gpio_dm_all[118]  = gpio_dm1[39];
  assign \gpio_dm_all[117]  = gpio_dm0[39];
  assign \gpio_dm_all[116]  = gpio_dm2[38];
  assign \gpio_dm_all[115]  = gpio_dm1[38];
  assign \gpio_dm_all[114]  = gpio_dm0[38];
  assign \gpio_dm_all[113]  = gpio_dm2[37];
  assign \gpio_dm_all[112]  = gpio_dm1[37];
  assign \gpio_dm_all[111]  = gpio_dm0[37];
  assign \gpio_dm_all[110]  = gpio_dm2[36];
  assign \gpio_dm_all[109]  = gpio_dm1[36];
  assign \gpio_dm_all[108]  = gpio_dm0[36];
  assign \gpio_dm_all[107]  = gpio_dm2[35];
  assign \gpio_dm_all[106]  = gpio_dm1[35];
  assign \gpio_dm_all[105]  = gpio_dm0[35];
  assign \gpio_dm_all[104]  = gpio_dm2[34];
  assign \gpio_dm_all[103]  = gpio_dm1[34];
  assign \gpio_dm_all[102]  = gpio_dm0[34];
  assign \gpio_dm_all[101]  = gpio_dm2[33];
  assign \gpio_dm_all[100]  = gpio_dm1[33];
  assign \gpio_dm_all[99]  = gpio_dm0[33];
  assign \gpio_dm_all[98]  = gpio_dm2[32];
  assign \gpio_dm_all[97]  = gpio_dm1[32];
  assign \gpio_dm_all[96]  = gpio_dm0[32];
  assign \gpio_dm_all[95]  = gpio_dm2[31];
  assign \gpio_dm_all[94]  = gpio_dm1[31];
  assign \gpio_dm_all[93]  = gpio_dm0[31];
  assign \gpio_dm_all[92]  = gpio_dm2[30];
  assign \gpio_dm_all[91]  = gpio_dm1[30];
  assign \gpio_dm_all[90]  = gpio_dm0[30];
  assign \gpio_dm_all[89]  = gpio_dm2[29];
  assign \gpio_dm_all[88]  = gpio_dm1[29];
  assign \gpio_dm_all[87]  = gpio_dm0[29];
  assign \gpio_dm_all[86]  = gpio_dm2[28];
  assign \gpio_dm_all[85]  = gpio_dm1[28];
  assign \gpio_dm_all[84]  = gpio_dm0[28];
  assign \gpio_dm_all[83]  = gpio_dm2[27];
  assign \gpio_dm_all[82]  = gpio_dm1[27];
  assign \gpio_dm_all[81]  = gpio_dm0[27];
  assign \gpio_dm_all[80]  = gpio_dm2[26];
  assign \gpio_dm_all[79]  = gpio_dm1[26];
  assign \gpio_dm_all[78]  = gpio_dm0[26];
  assign \gpio_dm_all[77]  = gpio_dm2[25];
  assign \gpio_dm_all[76]  = gpio_dm1[25];
  assign \gpio_dm_all[75]  = gpio_dm0[25];
  assign \gpio_dm_all[74]  = gpio_dm2[24];
  assign \gpio_dm_all[73]  = gpio_dm1[24];
  assign \gpio_dm_all[72]  = gpio_dm0[24];
  assign \gpio_dm_all[71]  = gpio_dm2[23];
  assign \gpio_dm_all[70]  = gpio_dm1[23];
  assign \gpio_dm_all[69]  = gpio_dm0[23];
  assign \gpio_dm_all[68]  = gpio_dm2[22];
  assign \gpio_dm_all[67]  = gpio_dm1[22];
  assign \gpio_dm_all[66]  = gpio_dm0[22];
  assign \gpio_dm_all[65]  = gpio_dm2[21];
  assign \gpio_dm_all[64]  = gpio_dm1[21];
  assign \gpio_dm_all[63]  = gpio_dm0[21];
  assign \gpio_dm_all[62]  = gpio_dm2[20];
  assign \gpio_dm_all[61]  = gpio_dm1[20];
  assign \gpio_dm_all[60]  = gpio_dm0[20];
  assign \gpio_dm_all[59]  = gpio_dm2[19];
  assign \gpio_dm_all[58]  = gpio_dm1[19];
  assign \gpio_dm_all[57]  = gpio_dm0[19];
  assign \gpio_dm_all[56]  = gpio_dm2[18];
  assign \gpio_dm_all[55]  = gpio_dm1[18];
  assign \gpio_dm_all[54]  = gpio_dm0[18];
  assign \gpio_dm_all[53]  = gpio_dm2[17];
  assign \gpio_dm_all[52]  = gpio_dm1[17];
  assign \gpio_dm_all[51]  = gpio_dm0[17];
  assign \gpio_dm_all[50]  = gpio_dm2[16];
  assign \gpio_dm_all[49]  = gpio_dm1[16];
  assign \gpio_dm_all[48]  = gpio_dm0[16];
  assign \gpio_dm_all[47]  = gpio_dm2[15];
  assign \gpio_dm_all[46]  = gpio_dm1[15];
  assign \gpio_dm_all[45]  = gpio_dm0[15];
  assign \gpio_dm_all[44]  = gpio_dm2[14];
  assign \gpio_dm_all[43]  = gpio_dm1[14];
  assign \gpio_dm_all[42]  = gpio_dm0[14];
  assign \gpio_dm_all[41]  = gpio_dm2[13];
  assign \gpio_dm_all[40]  = gpio_dm1[13];
  assign \gpio_dm_all[39]  = gpio_dm0[13];
  assign \gpio_dm_all[38]  = gpio_dm2[12];
  assign \gpio_dm_all[37]  = gpio_dm1[12];
  assign \gpio_dm_all[36]  = gpio_dm0[12];
  assign \gpio_dm_all[35]  = gpio_dm2[11];
  assign \gpio_dm_all[34]  = gpio_dm1[11];
  assign \gpio_dm_all[33]  = gpio_dm0[11];
  assign \gpio_dm_all[32]  = gpio_dm2[10];
  assign \gpio_dm_all[31]  = gpio_dm1[10];
  assign \gpio_dm_all[30]  = gpio_dm0[10];
  assign \gpio_dm_all[29]  = gpio_dm2[9];
  assign \gpio_dm_all[28]  = gpio_dm1[9];
  assign \gpio_dm_all[27]  = gpio_dm0[9];
  assign \gpio_dm_all[26]  = gpio_dm2[8];
  assign \gpio_dm_all[25]  = gpio_dm1[8];
  assign \gpio_dm_all[24]  = gpio_dm0[8];
  assign \gpio_dm_all[23]  = gpio_dm2[7];
  assign \gpio_dm_all[22]  = gpio_dm1[7];
  assign \gpio_dm_all[21]  = gpio_dm0[7];
  assign \gpio_dm_all[20]  = gpio_dm2[6];
  assign \gpio_dm_all[19]  = gpio_dm1[6];
  assign \gpio_dm_all[18]  = gpio_dm0[6];
  assign \gpio_dm_all[17]  = gpio_dm2[5];
  assign \gpio_dm_all[16]  = gpio_dm1[5];
  assign \gpio_dm_all[15]  = gpio_dm0[5];
  assign \gpio_dm_all[14]  = gpio_dm2[4];
  assign \gpio_dm_all[13]  = gpio_dm1[4];
  assign \gpio_dm_all[12]  = gpio_dm0[4];
  assign \gpio_dm_all[11]  = gpio_dm2[3];
  assign \gpio_dm_all[10]  = gpio_dm1[3];
  assign \gpio_dm_all[9]  = gpio_dm0[3];
  assign \gpio_dm_all[8]  = gpio_dm2[2];
  assign \gpio_dm_all[7]  = gpio_dm1[2];
  assign \gpio_dm_all[6]  = gpio_dm0[2];
  assign \gpio_dm_all[5]  = gpio_dm2[1];
  assign \gpio_dm_all[4]  = gpio_dm1[1];
  assign \gpio_dm_all[3]  = gpio_dm0[1];
  assign \gpio_dm_all[2]  = gpio_dm2[0];
  assign \gpio_dm_all[1]  = gpio_dm1[0];
  assign \gpio_dm_all[0]  = gpio_dm0[0];
  assign \gpio_enh[43]  = porb_h;
  assign \gpio_enh[42]  = porb_h;
  assign \gpio_enh[41]  = porb_h;
  assign \gpio_enh[40]  = porb_h;
  assign \gpio_enh[39]  = porb_h;
  assign \gpio_enh[38]  = porb_h;
  assign \gpio_enh[37]  = porb_h;
  assign \gpio_enh[36]  = porb_h;
  assign \gpio_enh[35]  = porb_h;
  assign \gpio_enh[34]  = porb_h;
  assign \gpio_enh[33]  = porb_h;
  assign \gpio_enh[32]  = porb_h;
  assign \gpio_enh[31]  = porb_h;
  assign \gpio_enh[30]  = porb_h;
  assign \gpio_enh[29]  = porb_h;
  assign \gpio_enh[28]  = porb_h;
  assign \gpio_enh[27]  = porb_h;
  assign \gpio_enh[26]  = porb_h;
  assign \gpio_enh[25]  = porb_h;
  assign \gpio_enh[24]  = porb_h;
  assign \gpio_enh[23]  = porb_h;
  assign \gpio_enh[22]  = porb_h;
  assign \gpio_enh[21]  = porb_h;
  assign \gpio_enh[20]  = porb_h;
  assign \gpio_enh[19]  = porb_h;
  assign \gpio_enh[18]  = porb_h;
  assign \gpio_enh[17]  = porb_h;
  assign \gpio_enh[16]  = porb_h;
  assign \gpio_enh[15]  = porb_h;
  assign \gpio_enh[14]  = porb_h;
  assign \gpio_enh[13]  = porb_h;
  assign \gpio_enh[12]  = porb_h;
  assign \gpio_enh[11]  = porb_h;
  assign \gpio_enh[10]  = porb_h;
  assign \gpio_enh[9]  = porb_h;
  assign \gpio_enh[8]  = porb_h;
  assign \gpio_enh[7]  = porb_h;
  assign \gpio_enh[6]  = porb_h;
  assign \gpio_enh[5]  = porb_h;
  assign \gpio_enh[4]  = porb_h;
  assign \gpio_enh[3]  = porb_h;
  assign \gpio_enh[2]  = porb_h;
  assign \gpio_enh[1]  = porb_h;
  assign \gpio_enh[0]  = porb_h;
endmodule
